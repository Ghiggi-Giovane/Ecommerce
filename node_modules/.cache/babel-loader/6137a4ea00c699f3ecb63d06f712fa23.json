{"remainingRequest":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js!C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\consulta\\components\\ParamConsulta.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\consulta\\components\\ParamConsulta.vue","mtime":1701906516455},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBcGlTZXJ2aWNlIGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2FwaS5zZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYXJhbUNvbnN1bHRhJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogMCwKICAgICAgcGFyYW1zbGlzdDogdGhpcy5wYXJhbXMgfHwgW10gLy8gY29tbyBwcm9wcyBuw6NvIHBvZGVtIHNlciBhbHRlcmFkYXMsIHByZWNpc28gcGFzc2FyIGFxdWkgcGFyYSBhZGljaW9uYXIgb3MgZGFkb3Mgc2UgdmllcmVtIGRlIHVtYSBhcGkKICAgIH07CiAgfSwKCiAgcHJvcHM6IHsKICAgIHBhcmFtczogewogICAgICB0eXBlOiBBcnJheQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbXB1dGVkcGFyYW1zKCkgewogICAgICByZXR1cm4gdGhpcy5wYXJhbXNsaXN0OwogICAgfSwKICAgIHNlbGVjdGVkcGFyYW1zKCkgewogICAgICByZXR1cm4gdGhpcy5wYXJhbXNsaXN0Lm1hcChwID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgW3Aubm9tZV06IHAudmFsdWUKICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRwYXJhbXMoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IDA7CiAgICAgIC8vdGhpcy5zZWxlY3RlZCA9IGl0ZW0gLy8gZXNzZSBuw6NvIGZ1bmNpb25hIHBxIMOpIGJhc2VhZG8gbnVuIGZpbHRybyAuLi4KICAgICAgdGhpcy5wYXJhbXNsaXN0Lm1hcChwYXIgPT4gewogICAgICAgIGlmIChwYXIuYXBpKSB7CiAgICAgICAgICAvLyBzZSBvIHBhcmFtZXRybyBuw6NvIHRlbSBvIGNhbXBvIGRhdGEgdmF6aW8gZWxlIHByZWNpc2EgZXNwZXJhciBvIHJldG9ybm8gZGEgYXBpIHBhcmEgY3JpYXIgZSByZW5kZXJpemFyIG5hIHRlbGEKICAgICAgICAgIC8vIGVudMOjbyDDqSB1c2FkbyBlc3NlIGNvbnRhZG9yIHBhcmEgc8OzIGFicmlyIGEgYWJhIGRvcyBwYXJhbWV0cm9zIGRlcG9pcyBkZSB0ZXIgbyBjYW1wbyBkYXRhIHBhcmEgcG9kZXIgY2FycmVnYXIgbmEgdGVsYQogICAgICAgICAgaWYgKCFwYXIuZGF0YSB8fCBwYXIuZGF0YS5sZW5ndGggPT0gMCkgewogICAgICAgICAgICB0aGlzLmxvYWRpbmcrKzsKICAgICAgICAgICAgdGhpcy5hcGlHZXQocGFyKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICBpZiAodGhpcy5sb2FkaW5nID4gMCkgdGhpcy5sb2FkaW5nLS07CiAgICAgICAgICAgICAgaWYgKHRoaXMubG9hZGluZyA9PSAwKSB0aGlzLnRhYkluZGV4ID0gMTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhc3luYyBhcGlHZXQocGFyKSB7CiAgICAgIEFwaVNlcnZpY2Uuc2V0QXV0aEhlYWRlcigpOwogICAgICBhd2FpdCBBcGlTZXJ2aWNlLmdldChwYXIuYXBpKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5wYXJhbXNsaXN0LmZpbmQoZiA9PiBmLm5vbWUgPT0gcGFyLm5vbWUpLmRhdGEgPSByZXMuZGF0YS5EYXRhOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvci5tZXNzYWdlKTsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFtBcGlTZXJ2aWNlLmFwaUdldF0gJHtlcnJvcn1gKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgcGFyYW1zKHBhcmFtcykgewogICAgICB0aGlzLnBhcmFtc2xpc3QgPSBwYXJhbXMgfHwgW107CiAgICAgIHRoaXMubG9hZHBhcmFtcygpOwogICAgfSwKICAgIHNlbGVjdGVkcGFyYW1zKHBhcmFtKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2V2dF9wYXJhbXNlbGVjdGVkJywgcGFyYW0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;EAEAA;EAEAC;IACA;MACAC;MACAC;IACA;EACA;;EAEAC;IAEAC;MACAC;IACA;EAEA;EAEAC;IACAC;MAAA;IAAA;IACAC;MAAA;QAAA;UAAA;QAAA;MAAA;IAAA;EACA;EAEAC;IAEAC;MACA;MACA;MACA;QACA;UACA;UACA;UACA;YACA;YACA;cACA;cACA;YACA;UACA;QACA;MACA;IAEA;IAEA;MAEAC;MAEA,8BACAC;QACA;MACA,GACAC;QACAC;QACA;MACA;IACA;EAEA;EAEAC;IAEAX;MACA;MACA;IACA;IAEAI;MACA;IACA;EAEA;AACA","names":["name","data","loading","paramslist","props","params","type","computed","computedparams","selectedparams","methods","loadparams","ApiService","then","catch","console","watch"],"sourceRoot":"src/pages/consulta/components","sources":["ParamConsulta.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <b-row>\r\n            <b-col cols=\"12\" md=\"4\" sm=\"6\" v-for=\"(par, i) of computedparams\" :key=\"i\">\r\n                <b-form-group :label=\"par.caption\">\r\n                    <b-form-input :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='number'\" type=\"number\" :min=\"par.min || 0\" :max=\"par.max || 0\">{{ par.tipo }}</b-form-input>\r\n                    <b-form-input :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='string'\" type=\"text\">{{ par.tipo }}</b-form-input>\r\n                    <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='select' && !par.api\" :options=\"par.data\"></b-form-select>\r\n                    <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='select' && par.api\" :options=\"par.data\"></b-form-select>\r\n                    <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='multiple' && par.api\" :options=\"par.data\"></b-form-select>\r\n                </b-form-group>\r\n            </b-col>\r\n        </b-row>\r\n\r\n        <!-- paramslist: {{paramslist}}\r\n        selectedparams: {{selectedparams}} -->\r\n    </div>\r\n</template>\r\n<script>\r\nimport ApiService from '../../../services/api.service'\r\nexport default {\r\n    \r\n    name: 'ParamConsulta',\r\n\r\n    data() {\r\n        return {\r\n            loading: 0,\r\n            paramslist: this.params ||  [] // como props não podem ser alteradas, preciso passar aqui para adicionar os dados se vierem de uma api\r\n        }\r\n    },\r\n\r\n    props: {\r\n\r\n        params: {\r\n            type: Array\r\n        }\r\n\r\n    },\r\n\r\n    computed: {\r\n        computedparams() { return this.paramslist },\r\n        selectedparams() { return this.paramslist.map(p => {return {[p.nome]: p.value}}) }\r\n    },\r\n\r\n    methods: {\r\n\r\n        loadparams() {\r\n            this.loading = 0\r\n            //this.selected = item // esse não funciona pq é baseado nun filtro ...\r\n            this.paramslist.map(par => {\r\n                if (par.api) {\r\n                    // se o parametro não tem o campo data vazio ele precisa esperar o retorno da api para criar e renderizar na tela\r\n                    // então é usado esse contador para só abrir a aba dos parametros depois de ter o campo data para poder carregar na tela\r\n                    if (!par.data || par.data.length==0) {\r\n                        this.loading++\r\n                        this.apiGet(par).then(() => {\r\n                            if (this.loading>0) this.loading--\r\n                            if (this.loading==0) this.tabIndex = 1\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\r\n        },\r\n\r\n        async apiGet(par) {\r\n\r\n        ApiService.setAuthHeader()\r\n        \r\n        await ApiService.get(par.api)\r\n            .then(res => {\r\n                this.paramslist.find(f => f.nome == par.nome).data = res.data.Data\r\n            })\r\n            .catch (error => {\r\n                console.error(error.message)\r\n                throw new Error(`[ApiService.apiGet] ${error}`)\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    watch: {\r\n\r\n        params(params) {\r\n            this.paramslist = params ||  [] \r\n            this.loadparams()\r\n        },\r\n\r\n        selectedparams(param) {\r\n            this.$emit('evt_paramselected', param)\r\n        }\r\n\r\n    }\r\n}\r\n</script>"]}]}