{"remainingRequest":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js!C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\consulta\\components\\TabsConsultas.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\consulta\\components\\TabsConsultas.vue","mtime":1670977910610},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AAEA;EAEAA,qBAFA;EAIAC;IAEAC;EAFA,CAJA;;EAUAC;IACA;MACAC,UADA;MAEAC,WAFA;MAGAC,cAHA;MAIAC,YAJA;MAKAC,UALA;MAMAC,iBANA;MAOAC,aAPA;MAQAC;QACAC;MADA,CARA;MAWAC;QAAAC;QAAAC;UAAAC;QAAA;MAAA,CAXA;MAYAC,UAZA;MAaAC;IAbA;EAeA,CA1BA;;EA4BAC,YAEA,uHAFA;;IAIAC;MAAA;IAAA,CAJA;;IAMAC;MAAA;IAAA,CANA;;IAQAC;MACA;MACA,iBACA;QAAAC;UAAA;YAAA;UAAA;QAAA;MAAA;MACA;IACA,CAbA;;IAeAC;MACA;MAEA;AACA;;MAEA;IACA,CAtBA;;IAwBAC;MACA;;MACA;QACA;UACA;UACAC;YAAAC;YAAAC;UAAA;QACA,CAHA;MAIA;;MACA;IACA,CAjCA;;IAmCAC;MACA;MACA,8GACAC;MACA;IACA,CAxCA;;IA0CAC;MACA;MACA;QAAAC;QAAAC;MAAA;IACA;;EA7CA,CA5BA;;EA6EAC;IAEA;EAEA,CAjFA;;EAmFAC,WAEA,uDAFA;;IAIAC;MACA;IACA,CANA;;IAUAC;MACAC;MACA;MACA;IACA,CAdA;;IAgBAC;MACA;MACA,kDAFA,CAGA;MACA;;MACA;MACA;QACA;UAAA;YAAA;UAAA;QAAA,EADA,CAEA;QACA;MACA,CAJA,EANA,CAWA;;MACAD;MACAA;MACAA;MACA;QAAA;MAAA;MAEAE;QAAAhB;MAAA,GACAiB,IADA,CACAX;QACA;QACA;QACA;QACA;MACA,CANA;MAQA;IACA,CA1CA;;IA0CA;IAEAY;MACAJ;MACA;;MACA;QACA;UACA;YACAA;YACAI,yBACAC,GADA,CACAC,kBADA,EAEAC,MAFA,CAEA,uCAFA,EAEAC,OAFA,CAEA,CAFA;UAGA;QACA,CAPA;MAQA;;MACA;IACA,CA1DA;;IA4DAC;MACA;MACA,mCAFA,CAEA;;MACA,8DAHA,CAIA;;MACA;MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEA;IACA,CArFA;;IAqFA;IAEA;MAEAP;MAEA,8BACAC,IADA,CACAX;QACAkB;MACA,CAHA,EAIAC,KAJA,CAIAC;QACAZ;QACA;MACA,CAPA;IAQA;;EAnGA,CAnFA;EAwLA;EAEAa;IAEAC;MACA;MACA;IACA;;EALA;AA1LA","names":["name","components","TableEditApi","data","filtro","tabIndex","currentPage","totalPage","perPage","currentParams","consultas","results","Data","selected","Nome","config","caption","loading","loadconsultas","computed","computedparams","selectedroute","selectedparams","param","params","selectParams","pars","nome","value","selectData","res","pagination","PageNumber","PageSize","mounted","methods","consultasfiltered","executaConsulta","console","_executaConsulta","ApiService","then","soma","map","f","reduce","toFixed","select","par","catch","error","watch","gtxconsultasData"],"sourceRoot":"src/pages/consulta/components","sources":["TabsConsultas.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- <b-button variant=\"primary\" @click=\"buscaConsultas\">Busca consultas</b-button> -->\r\n        \r\n        <b-card no-body>\r\n            <b-tabs content-class=\"mt-3\" v-model=\"tabIndex\" justified>\r\n                <b-tab title=\"Consultas\" active>\r\n                    <b-row class=\"m-2\">\r\n                        <b-col>\r\n                            <b-input-group>\r\n                                <b-input-group-prepend is-text>\r\n                                    <b-icon icon=\"search\"></b-icon>\r\n                                </b-input-group-prepend>\r\n                                <b-form-input v-model=\"filtro\" placeholder=\"Localizar consulta\"></b-form-input>\r\n                            </b-input-group>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"m-2\">\r\n                        <b-col>\r\n                            <b-list-group>\r\n                                <!-- <b-overlay :show=\"loadconsultas\"> -->\r\n                                <b-skeleton-wrapper :loading=\"loadconsultas\">\r\n                                    <template #loading>\r\n                                        <b-list-group-item v-for=\"i of [85,76,89]\" :key=\"i\">\r\n                                            <b-skeleton :width=\"`${i}%`\"></b-skeleton>\r\n                                        </b-list-group-item>\r\n                                    </template>\r\n                                    <b-list-group-item\r\n                                        button\r\n                                        v-for=\"(item, i) of consultasfiltered(filtro)\" :key=\"i\"\r\n                                        @click=\"select(item)\"\r\n                                    >\r\n                                        {{item.config.caption || item.Nome}}\r\n                                    </b-list-group-item>\r\n                                <!-- </b-overlay> -->\r\n                                </b-skeleton-wrapper>\r\n                            </b-list-group>                        \r\n                        </b-col>\r\n                    </b-row>\r\n                    <!-- <b-button v-b-toggle=\"`collapse-${consultas.id}`\" variant=\"primary\" block class=\"mt-2\">Show JSON consultas</b-button>\r\n                    <b-collapse :id=\"`collapse-${consultas.id}`\">\r\n                        <pre>\r\n                            {{ consultas }}\r\n                        </pre>\r\n                    </b-collapse> -->\r\n                </b-tab>\r\n                <b-tab title=\"Parametros\">\r\n\r\n                    <b-row class=\"m-2\">\r\n                        <b-col cols=\"12\" md=\"4\" sm=\"6\" v-for=\"(par, i) of params\" :key=\"i\">\r\n                            <!-- <label :for=\"`par${i}`\">{{ par.caption }}</label> -->\r\n                            <b-form-group :label=\"par.caption\">\r\n                            <b-form-input :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='number'\" type=\"number\" :min=\"par.min || 0\" :max=\"par.max || 0\">{{ par.tipo }}</b-form-input>\r\n                            <b-form-input :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='string'\" type=\"text\">{{ par.tipo }}</b-form-input>\r\n                            <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='select' && !par.api\" :options=\"par.data\"></b-form-select>\r\n                            <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='select' && par.api\" :options=\"par.data\"></b-form-select>\r\n                            <b-form-select :id=\"`par${i}`\" v-model=\"par.value\" v-if=\"par.tipo=='multiple' && par.api\" :options=\"par.data\"></b-form-select>\r\n                            </b-form-group>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row align-h=\"end\" class=\"m-2\">\r\n                        <b-col>\r\n                            <b-button variant=\"success\" @click=\"executaConsulta\" class=\"float-right\">Consultar</b-button>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <!-- <b-button v-b-toggle=\"`collapse-${selected.id}`\" variant=\"primary\" block class=\"mt-2\">Show JSON selected</b-button>\r\n                    <b-collapse :id=\"`collapse-${selected.id}`\">\r\n                        <pre>\r\n                            {{ selected }}\r\n                        </pre>\r\n                    </b-collapse> -->\r\n                </b-tab>\r\n                <b-tab title=\"Resultado\">\r\n                    <b-overlay :show=\"loading>0\" rounded=\"sm\">\r\n\r\n                        <TableEditApi\r\n                            ref=\"result\"\r\n                            :route=\"selectedroute\"\r\n                            :params=\"selectedparams\"\r\n                            :soma=\"[{key: 'valor'}]\"\r\n                            :perPage=\"5\"/>\r\n\r\n                    </b-overlay>\r\n\r\n                    <hr/>\r\n\r\n                    <b-pagination\r\n                        v-model=\"currentPage\"\r\n                        :total-rows=\"totalPage\"\r\n                        :per-page=\"perPage\"\r\n                        align=\"right\">\r\n                    </b-pagination>\r\n                </b-tab>\r\n            </b-tabs>\r\n\r\n        </b-card>\r\n\r\n        <!-- gtxconsultasData: {{gtxconsultasData}}<br/> -->\r\n        gtxconsultasselected: {{gtxconsultasselected}}<br/>\r\n        <!-- gtxconsultasselectedparams: {{gtxconsultasselectedparams}}<br/> -->\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TableEditApi from '../../../components/TableEditApi'\r\nimport ApiService from '../../../services/api.service'\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n\r\n    name: 'TabsConsultas',\r\n\r\n    components: {\r\n\r\n        TableEditApi\r\n\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            filtro: '',\r\n            tabIndex: 0,\r\n            currentPage: 1,\r\n            totalPage: 1,\r\n            perPage: 5,\r\n            currentParams: '',\r\n            consultas: [],\r\n            results: {\r\n                Data: []\r\n            },\r\n            selected: {Nome: 'Consulta não selecionada', config: {caption: 'Consulta não cadastrada'}},\r\n            loading: 0,\r\n            loadconsultas: true\r\n        }\r\n    },\r\n    \r\n    computed: {\r\n\r\n        ...mapGetters(['gtxconsultasData', 'gtxconsultasselected', 'gtxconsultasselectedparams', 'gtxconsultasselectedresult']),\r\n\r\n        computedparams() { return this.params },\r\n\r\n        selectedroute() { return (this.selected.Nome !== 'Consulta não selecionada') ? 'Servicos/CONS_/' + this.selected.Nome : '' },\r\n        \r\n        selectedparams() { \r\n            let param = {}\r\n            if (this.params) \r\n              this.params.map(p => {param = {...param, ...{[p.nome]: p.value}}})\r\n            return param\r\n        },      \r\n\r\n        params() {\r\n            let pars = this.gtxconsultasselectedparams || []\r\n\r\n/*             if ((this.selected) && (this.selected.config))\r\n              pars = this.selected.config.param */\r\n\r\n            return pars\r\n        },\r\n\r\n        selectParams() {\r\n            let pars = []\r\n            if ((this.selected.config) && (this.selected.config.param)) {\r\n                this.selected.config.param.map(par => {\r\n                    // pars.push({[par.nome]: par.value || null})\r\n                    pars.push({nome: par.nome, value: par.value || null})\r\n                })\r\n            }\r\n            return pars\r\n        },\r\n\r\n        selectData(param) {\r\n            let res = null\r\n            if (this.selected && this.selected.config.param && this.selected.config.param.find(p => p.nome = param.nome))\r\n              res = this.selected.config.param.find(p => p.nome = param.nome).data || []\r\n            return res || []\r\n        },\r\n        \r\n        pagination() {\r\n            // return `&PageNumber=${this.currentPage}&PageSize=${this.perPage}`\r\n            return { PageNumber: this.currentPage, PageSize: this.perPage }\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n\r\n        this.actConsultas()\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        ...mapActions(['actConsultas', 'actConsultasSelected']),\r\n\r\n        consultasfiltered(filtro) {\r\n            return this.gtxconsultasData.filter(c => (c.config.caption || c.Nome).toUpperCase().includes(filtro.toUpperCase()))\r\n        },        \r\n\r\n\r\n\r\n        executaConsulta() {\r\n            console.log('executaConsulta')\r\n            this.$refs.result.getFromApi()\r\n            this.tabIndex++\r\n        },\r\n\r\n        _executaConsulta() {\r\n            this.loading = 1\r\n            let route = 'Servicos/CONS_' + this.selected.Nome\r\n            // let param = null\r\n            //this.currentParams = ''\r\n            this.currentParams = {}\r\n            this.selectParams.map(par => {\r\n                this.currentParams = {...this.currentParams, ...{[par.nome]: par.value || null}}\r\n                // this.currentParams += '&' + par.nome + '=' + (par.value || 'null')\r\n                // console.log(par)\r\n            })\r\n            // this.currentParams = this.currentParams.substr(1)\r\n            console.log('route:', route)\r\n            console.log('param:', this.currentParams)\r\n            console.log('pagination:', this.pagination)\r\n            this.currentParams = {...this.currentParams, ...this.pagination}\r\n\r\n            ApiService.get(route, { params: this.currentParams })\r\n                .then(res => {\r\n                    this.results = res.data\r\n                    this.totalPage = (res.data.Paginas.PageCount * res.data.Paginas.PageSize)\r\n                    this.perPage = res.data.Paginas.PageSize\r\n                    this.loading = 0\r\n                })\r\n\r\n            this.tabIndex = 2\r\n        }, // executaConsulta()\r\n\r\n        soma(fld) {\r\n            console.log(fld)\r\n            let soma = '';\r\n            if (this.selected.config && this.selected.config.soma) {\r\n                this.selected.config.soma.map(s => {\r\n                    if (fld.column.toUpperCase() ==  s.nome.toUpperCase()) {\r\n                        console.log(s)\r\n                        soma = (this.results.Data\r\n                                .map(f => f[fld.column])\r\n                                .reduce((a,b) => parseFloat(a)+parseFloat(b))).toFixed(2)\r\n                    }\r\n                })\r\n            }\r\n            return soma;\r\n        },\r\n\r\n        select(item) {\r\n            this.loading = 0\r\n            this.actConsultasSelected(item.id) // posiciona na store a consulta selecionada ...\r\n            this.selected = this.consultas.find(f => f.Nome == item.Nome)\r\n            // emite a consulta ...\r\n            this.$emit('onConsultaSelected', this.selected)\r\n\r\n/*             if ((this.selected.config) && (this.selected.config.param)) {\r\n                this.selected.config.param.map(par => {\r\n                    if (par.api) {\r\n                        // se o parametro não tem o campo data vazio ele precisa esperar o retorno da api para criar e renderizar na tela\r\n                        // então é usado esse contador para só abrir a aba dos parametros depois de ter o campo data para poder carregar na tela\r\n                        if (!par.data || par.data.length==0) {\r\n                            this.loading++\r\n                            this.apiGet(par).then(() => {\r\n                                if (this.loading>0) this.loading--\r\n                                // console.log('apiGet::go=', this.loading)\r\n                                if (this.loading==0) this.tabIndex = 1\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            } */\r\n\r\n            if (!this.tabIndex==1 && this.loading==0) this.tabIndex = 1\r\n        }, // select(item)\r\n\r\n        async apiGet(par) {\r\n\r\n            ApiService.setAuthHeader()\r\n            \r\n            await ApiService.get(par.api)\r\n                .then(res => {\r\n                    par.data = res.data.Data\r\n                })\r\n                .catch (error => {\r\n                    console.error(error.message)\r\n                    throw new Error(`[ApiService] ${error}`)\r\n                })\r\n        }\r\n\r\n    }, // async apiGet(par)\r\n\r\n    watch: {\r\n\r\n        gtxconsultasData() {\r\n            this.consultas = this.gtxconsultasData\r\n            this.loadconsultas = false\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .col-form-label {\r\n      padding-bottom: 0;\r\n  }\r\n\r\n</style>"]}]}