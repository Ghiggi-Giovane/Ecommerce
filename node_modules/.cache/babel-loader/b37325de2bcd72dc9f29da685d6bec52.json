{"remainingRequest":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js!C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\node_modules\\vue-quaggajs\\src\\Scanner.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\node_modules\\vue-quaggajs\\src\\Scanner.vue","mtime":1670977936060},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFF1YWdnYSBmcm9tICdxdWFnZ2EnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1F1YWdnYVNjYW5uZXInLAogIHByb3BzOiB7CiAgICBvbkRldGVjdGVkOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAoKICAgICAgZGVmYXVsdChyZXN1bHQpIHsKICAgICAgICBjb25zb2xlLmxvZygnZGV0ZWN0ZWQ6ICcsIHJlc3VsdCk7CiAgICAgIH0KCiAgICB9LAogICAgb25Qcm9jZXNzZWQ6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCgogICAgICBkZWZhdWx0KHJlc3VsdCkgewogICAgICAgIGxldCBkcmF3aW5nQ3R4ID0gUXVhZ2dhLmNhbnZhcy5jdHgub3ZlcmxheTsKICAgICAgICBsZXQgZHJhd2luZ0NhbnZhcyA9IFF1YWdnYS5jYW52YXMuZG9tLm92ZXJsYXk7CgogICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgIGlmIChyZXN1bHQuYm94ZXMpIHsKICAgICAgICAgICAgZHJhd2luZ0N0eC5jbGVhclJlY3QoMCwgMCwgcGFyc2VJbnQoZHJhd2luZ0NhbnZhcy5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpLCBwYXJzZUludChkcmF3aW5nQ2FudmFzLmdldEF0dHJpYnV0ZSgnaGVpZ2h0JykpKTsKICAgICAgICAgICAgcmVzdWx0LmJveGVzLmZpbHRlcihmdW5jdGlvbiAoYm94KSB7CiAgICAgICAgICAgICAgcmV0dXJuIGJveCAhPT0gcmVzdWx0LmJveDsKICAgICAgICAgICAgfSkuZm9yRWFjaChmdW5jdGlvbiAoYm94KSB7CiAgICAgICAgICAgICAgUXVhZ2dhLkltYWdlRGVidWcuZHJhd1BhdGgoYm94LCB7CiAgICAgICAgICAgICAgICB4OiAwLAogICAgICAgICAgICAgICAgeTogMQogICAgICAgICAgICAgIH0sIGRyYXdpbmdDdHgsIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgICAgICAgbGluZVdpZHRoOiAyCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChyZXN1bHQuYm94KSB7CiAgICAgICAgICAgIFF1YWdnYS5JbWFnZURlYnVnLmRyYXdQYXRoKHJlc3VsdC5ib3gsIHsKICAgICAgICAgICAgICB4OiAwLAogICAgICAgICAgICAgIHk6IDEKICAgICAgICAgICAgfSwgZHJhd2luZ0N0eCwgewogICAgICAgICAgICAgIGNvbG9yOiAnIzAwRicsCiAgICAgICAgICAgICAgbGluZVdpZHRoOiAyCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChyZXN1bHQuY29kZVJlc3VsdCAmJiByZXN1bHQuY29kZVJlc3VsdC5jb2RlKSB7CiAgICAgICAgICAgIFF1YWdnYS5JbWFnZURlYnVnLmRyYXdQYXRoKHJlc3VsdC5saW5lLCB7CiAgICAgICAgICAgICAgeDogJ3gnLAogICAgICAgICAgICAgIHk6ICd5JwogICAgICAgICAgICB9LCBkcmF3aW5nQ3R4LCB7CiAgICAgICAgICAgICAgY29sb3I6ICdyZWQnLAogICAgICAgICAgICAgIGxpbmVXaWR0aDogMwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICB9LAogICAgcmVhZGVyVHlwZXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsnY29kZV8xMjhfcmVhZGVyJ10KICAgIH0sCiAgICByZWFkZXJTaXplOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHsKICAgICAgICB3aWR0aDogNjQwLAogICAgICAgIGhlaWdodDogNDgwCiAgICAgIH0pLAogICAgICB2YWxpZGF0b3I6IG8gPT4gdHlwZW9mIG8ud2lkdGggPT09ICdudW1iZXInICYmIHR5cGVvZiBvLmhlaWdodCA9PT0gJ251bWJlcicKICAgIH0sCiAgICBhc3BlY3RSYXRpbzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgbWluOiAxLAogICAgICAgIG1heDogMgogICAgICB9KSwKICAgICAgdmFsaWRhdG9yOiBvID0+IHR5cGVvZiBvLm1pbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG8ubWF4ID09PSAnbnVtYmVyJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVhZ2dhU3RhdGU6IHsKICAgICAgICBpbnB1dFN0cmVhbTogewogICAgICAgICAgdHlwZTogJ0xpdmVTdHJlYW0nLAogICAgICAgICAgY29uc3RyYWludHM6IHsKICAgICAgICAgICAgd2lkdGg6IHsKICAgICAgICAgICAgICBtaW46IHRoaXMucmVhZGVyU2l6ZS53aWR0aAogICAgICAgICAgICB9LAogICAgICAgICAgICBoZWlnaHQ6IHsKICAgICAgICAgICAgICBtaW46IHRoaXMucmVhZGVyU2l6ZS5oZWlnaHQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZmFjaW5nTW9kZTogJ2Vudmlyb25tZW50JywKICAgICAgICAgICAgYXNwZWN0UmF0aW86IHsKICAgICAgICAgICAgICBtaW46IDEsCiAgICAgICAgICAgICAgbWF4OiAyCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxvY2F0b3I6IHsKICAgICAgICAgIHBhdGNoU2l6ZTogJ21lZGl1bScsCiAgICAgICAgICBoYWxmU2FtcGxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBudW1PZldvcmtlcnM6IDIsCiAgICAgICAgZnJlcXVlbmN5OiAxMCwKICAgICAgICBkZWNvZGVyOiB7CiAgICAgICAgICByZWFkZXJzOiB0aGlzLnJlYWRlclR5cGVzCiAgICAgICAgfSwKICAgICAgICBsb2NhdGU6IHRydWUKICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBvbkRldGVjdGVkOiBmdW5jdGlvbiAob2xkVmFsdWUsIG5ld1ZhbHVlKSB7CiAgICAgIGlmIChvbGRWYWx1ZSkgUXVhZ2dhLm9mZkRldGVjdGVkKG9sZFZhbHVlKTsKICAgICAgaWYgKG5ld1ZhbHVlKSBRdWFnZ2Eub25EZXRlY3RlZChuZXdWYWx1ZSk7CiAgICB9LAogICAgb25Qcm9jZXNzZWQ6IGZ1bmN0aW9uIChvbGRWYWx1ZSwgbmV3VmFsdWUpIHsKICAgICAgaWYgKG9sZFZhbHVlKSBRdWFnZ2Eub2ZmUHJvY2Vzc2VkKG9sZFZhbHVlKTsKICAgICAgaWYgKG5ld1ZhbHVlKSBRdWFnZ2Eub25Qcm9jZXNzZWQobmV3VmFsdWUpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgUXVhZ2dhLmluaXQodGhpcy5xdWFnZ2FTdGF0ZSwgZnVuY3Rpb24gKGVycikgewogICAgICBpZiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfQoKICAgICAgUXVhZ2dhLnN0YXJ0KCk7CiAgICB9KTsKICAgIFF1YWdnYS5vbkRldGVjdGVkKHRoaXMub25EZXRlY3RlZCk7CiAgICBRdWFnZ2Eub25Qcm9jZXNzZWQodGhpcy5vblByb2Nlc3NlZCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGlmICh0aGlzLm9uRGV0ZWN0ZWQpIFF1YWdnYS5vZmZEZXRlY3RlZCh0aGlzLm9uRGV0ZWN0ZWQpOwogICAgaWYgKHRoaXMub25Qcm9jZXNzZWQpIFF1YWdnYS5vZmZQcm9jZXNzZWQodGhpcy5vZmZQcm9jZXNzZWQpOwogICAgUXVhZ2dhLnN0b3AoKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;AAQA;AAEA;EACAA,qBADA;EAEAC;IACAC;MACAC,cADA;;MAEAC;QACAC;MACA;;IAJA,CADA;IAOAC;MACAH,cADA;;MAEAC;QACA;QAEA;;QAEA;UACA;YACAG,qBACA,CADA,EAEA,CAFA,EAGAC,6CAHA,EAIAA,8CAJA;YAMAC,aACAC,MADA,CACA;cACA;YACA,CAHA,EAIAC,OAJA,CAIA;cACAC;gBAAAC;gBAAAC;cAAA;gBACAC,cADA;gBAEAC;cAFA;YAIA,CATA;UAUA;;UACA;YACAJ;cAAAC;cAAAC;YAAA;cACAC,aADA;cAEAC;YAFA;UAIA;;UAEA;YACAJ,2BACAH,WADA,EAEA;cAAAI;cAAAC;YAAA,CAFA,EAGAP,UAHA,EAIA;cAAAQ;cAAAC;YAAA,CAJA;UAMA;QACA;MACA;;IA1CA,CAPA;IAmDAC;MACAd,WADA;MAEAC;IAFA,CAnDA;IAuDAc;MACAf,YADA;MAEAC;QACAe,UADA;QAEAC;MAFA,EAFA;MAMAC,gBACA;IAPA,CAvDA;IAgEAC;MACAnB,YADA;MAEAC;QACAmB,MADA;QAEAC;MAFA,EAFA;MAMAH;IANA;EAhEA,CAFA;EA2EAI;IACA;MACAC;QACAC;UACAxB,kBADA;UAEAyB;YACAT;cAAAI;YAAA,CADA;YAEAH;cAAAG;YAAA,CAFA;YAGAM,yBAHA;YAIAP;cAAAC;cAAAC;YAAA;UAJA;QAFA,CADA;QAUAM;UACAC,mBADA;UAEAC;QAFA,CAVA;QAcAC,eAdA;QAeAC,aAfA;QAgBAC;UACAC;QADA,CAhBA;QAmBAC;MAnBA;IADA;EAuBA,CAnGA;EAoGAC;IACApC;MACA;MACA;IACA,CAJA;IAKAI;MACA;MACA;IACA;EARA,CApGA;EA8GAiC;IACA3B;MACA;QACA;MACA;;MACAA;IACA,CALA;IAMAA;IACAA;EACA,CAvHA;EAwHA4B;IACA;IACA;IACA5B;EACA;AA5HA","names":["name","props","onDetected","type","default","console","onProcessed","drawingCtx","parseInt","result","filter","forEach","Quagga","x","y","color","lineWidth","readerTypes","readerSize","width","height","validator","aspectRatio","min","max","data","quaggaState","inputStream","constraints","facingMode","locator","patchSize","halfSample","numOfWorkers","frequency","decoder","readers","locate","watch","mounted","destroyed"],"sourceRoot":"node_modules/vue-quaggajs/src","sources":["Scanner.vue"],"sourcesContent":["<template>\n  <div id=\"interactive\" class=\"viewport scanner\">\n    <video />\n    <canvas class=\"drawingBuffer\" />\n  </div>\n</template>\n\n<script>\nimport Quagga from 'quagga';\n\nexport default {\n  name: 'QuaggaScanner',\n  props: {\n    onDetected: {\n      type: Function,\n      default(result) {\n        console.log('detected: ', result);\n      },\n    },\n    onProcessed: {\n      type: Function,\n      default(result) {\n        let drawingCtx = Quagga.canvas.ctx.overlay;\n\n        let drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n          if (result.boxes) {\n            drawingCtx.clearRect(\n              0,\n              0,\n              parseInt(drawingCanvas.getAttribute('width')),\n              parseInt(drawingCanvas.getAttribute('height'))\n            );\n            result.boxes\n              .filter(function(box) {\n                return box !== result.box;\n              })\n              .forEach(function(box) {\n                Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                  color: 'green',\n                  lineWidth: 2,\n                });\n              });\n          }\n          if (result.box) {\n            Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n              color: '#00F',\n              lineWidth: 2,\n            });\n          }\n\n          if (result.codeResult && result.codeResult.code) {\n            Quagga.ImageDebug.drawPath(\n              result.line,\n              { x: 'x', y: 'y' },\n              drawingCtx,\n              { color: 'red', lineWidth: 3 }\n            );\n          }\n        }\n      },\n    },\n    readerTypes: {\n      type: Array,\n      default: () => ['code_128_reader'],\n    },\n    readerSize: {\n      type: Object,\n      default: () => ({\n        width: 640,\n        height: 480,\n      }),\n      validator: o =>\n        typeof o.width === 'number' && typeof o.height === 'number',\n    },\n    aspectRatio: {\n      type: Object,\n      default: () => ({\n        min: 1,\n        max: 2,\n      }),\n      validator: o => typeof o.min === 'number' && typeof o.max === 'number',\n    },\n  },\n  data: function() {\n    return {\n      quaggaState: {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: { min: this.readerSize.width },\n            height: { min: this.readerSize.height },\n            facingMode: 'environment',\n            aspectRatio: { min: 1, max: 2 },\n          },\n        },\n        locator: {\n          patchSize: 'medium',\n          halfSample: true,\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n          readers: this.readerTypes,\n        },\n        locate: true,\n      },\n    };\n  },\n  watch: {\n    onDetected: function(oldValue, newValue) {\n      if (oldValue) Quagga.offDetected(oldValue);\n      if (newValue) Quagga.onDetected(newValue);\n    },\n    onProcessed: function(oldValue, newValue) {\n      if (oldValue) Quagga.offProcessed(oldValue);\n      if (newValue) Quagga.onProcessed(newValue);\n    },\n  },\n  mounted: function() {\n    Quagga.init(this.quaggaState, function(err) {\n      if (err) {\n        return console.error(err);\n      }\n      Quagga.start();\n    });\n    Quagga.onDetected(this.onDetected);\n    Quagga.onProcessed(this.onProcessed);\n  },\n  destroyed: function() {\n    if (this.onDetected) Quagga.offDetected(this.onDetected);\n    if (this.onProcessed) Quagga.offProcessed(this.offProcessed);\n    Quagga.stop();\n  },\n};\n</script>\n\n<style scoped>\n.viewport {\n  position: relative;\n}\n\n.viewport canvas,\n.viewport video {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>\n"]}]}