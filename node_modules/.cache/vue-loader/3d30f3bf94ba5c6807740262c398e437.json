{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\ecommerce\\views\\Pedidos.vue?vue&type=template&id=5d36d9aa&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\ecommerce\\views\\Pedidos.vue","mtime":1670977910623},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670977935849},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}