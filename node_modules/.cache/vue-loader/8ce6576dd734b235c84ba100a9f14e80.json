{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\coleta\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\coleta\\views\\index.vue","mtime":1701906516453},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQXBpU2VydmljZSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9hcGkuc2VydmljZScNCmltcG9ydCBDb2xldGFFQU4gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9Db2xldGFFQU4nDQppbXBvcnQgeyBzYXZlVG9DU1YgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9jc3YnDQppbXBvcnQgeyBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdDb2xldGFMaXZyZScsDQogICAgYmVmb3JlTW91bnQoKSB7DQogICAgICAgIHRoaXMuY29uc3VsdGFDb2xldGFzKCkNCiAgICB9LA0KDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIG5vbWU6IHsNCiAgICAgICAgICAgICAgICB2YWx1ZTogJycsDQogICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsDQogICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLA0KICAgICAgICAgICAgICAgIHRpdGxlOiAnTm9tZSBkYSBjYXRlZ29yaWEnLA0KICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAnSW5mb3JtZSBvIG5vbWUgZGEgY2F0ZWdvcmlhJw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNvbGV0YXM6IFtdLA0KICAgICAgICAgICAgY29uc3VsdGFjb2xldGFzOiBbXSwNCiAgICAgICAgICAgIGNvbGV0YXN4bWw6ICcnLA0KICAgICAgICAgICAgZGVzdGlubzogbnVsbCwNCiAgICAgICAgICAgIGRlc3Rpbm9zOiBbDQogICAgICAgICAgICAgICAgeyB2YWx1ZTogMSwgdGV4dDogJ0NvbmZlcsOqbmNpYSBkZSBJbW9iaWxpemFkb3MnIH0sDQogICAgICAgICAgICAgICAgeyB2YWx1ZTogMiwgdGV4dDogJ0NvbmZlcsOqbmNpYSBFeHBlZGnDp8O1ZXMnIH0sDQogICAgICAgICAgICAgICAgeyB2YWx1ZTogbnVsbCwgdGV4dDogJy0nLCBkaXNhYmxlZDogdHJ1ZSB9LA0KICAgICAgICAgICAgICAgIHsgdmFsdWU6IC0xLCB0ZXh0OiAnU2FsdmFyIGVtIEFycXVpdm8gQ1NWJyB9LA0KICAgICAgICAgICAgXSwNCiAgICAgICAgfQ0KICAgIH0sDQoNCiAgICBjb21wb25lbnRzOiB7DQogICAgICAgIENvbGV0YUVBTg0KICAgIH0sDQoNCiAgICBjb21wdXRlZDogew0KICAgICAgICBjb25maWcoKSB7DQogICAgICAgICAgICByZXR1cm4gYDxkYXRhPjxpZENvbGV0YVRpcG8+JHt0aGlzLmRlc3Rpbm99PC9pZENvbGV0YVRpcG8+PE5vbWVDYXRlZ29yaWE+JHt0aGlzLm5vbWUudmFsdWV9PC9Ob21lQ2F0ZWdvcmlhPjwvZGF0YT5gDQogICAgICAgIH0sDQogICAgICAgIGNvbGV0YXNOT2VudGVyKCkgew0KICAgICAgICAgIHJldHVybiB0aGlzLmNvbGV0YXMubWFwKGMgPT4geyByZXR1cm4geyBlYW46IGMuZWFuLnJlcGxhY2UoJ1xuJywgJycpIH0gfSk7DQogICAgICAgIH0sDQogICAgICAgIHBhZ2VDb2xldGFzKCkgew0KICAgICAgICAgICAgcmV0dXJuIFsNCiAgICAgICAgICAgICAgICB7IHRpdGxlOiBgQ29sZXRhcyBFbnZpYWRhcyAoICR7dGhpcy5jb25zdWx0YWNvbGV0YXMubGVuZ3RofSApYA0KICAgICAgICAgICAgICAgICwgdGFibGU6IHRydWUNCiAgICAgICAgICAgICAgICAsIGRhdGE6IHRoaXMuY29uc3VsdGFjb2xldGFzDQogICAgICAgICAgICAgICAgLCBmaWVsZHM6IFsNCiAgICAgICAgICAgICAgICAgICAgeyBrZXk6ICdDYXRlZ29yaWEnLCBzb3J0YWJsZTogdHJ1ZSB9LA0KICAgICAgICAgICAgICAgICAgICB7IGtleTogJ0VhbicsIHNvcnRhYmxlOiB0cnVlIH0sDQogICAgICAgICAgICAgICAgICAgIHsga2V5OiAnRGF0YUNvbGV0YScsIHNvcnRhYmxlOiB0cnVlIH0NCiAgICAgICAgICAgICAgICBdfQ0KICAgICAgICAgICAgXQ0KICAgICAgICB9DQogICAgfSwNCg0KICAgIGJlZm9yZU1vdW50KCkgew0KICAgICAgdGhpcy5idXNjYVRpcG9zQ29sZXRhcygpOw0KICAgIH0sDQoNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC4uLm1hcEFjdGlvbnMoWydhY3RUb2FzdCddKSwNCg0KICAgICAgICBvbkVudmlhQ29sZXRhWE1MKGNvbGV0YXMpIHsNCiAgICAgICAgICAgIHRoaXMuY29sZXRhc3htbCA9IGNvbGV0YXMNCiAgICAgICAgICAgIHRoaXMuJGJ2TW9kYWwuc2hvdygnY29sZXRhY2F0ZWdvcmlhJykNCiAgICAgICAgfSwNCiAgICAgICAgb25FbnZpYUNvbGV0YShjb2xldGFzKSB7DQogICAgICAgICAgICB0aGlzLmNvbGV0YXMgPSBjb2xldGFzDQogICAgICAgICAgICB0aGlzLiRidk1vZGFsLnNob3coJ2NvbGV0YWNhdGVnb3JpYScpDQogICAgICAgIH0sDQogICAgICAgIGVudmlhQ29sZXRhcygpIHsNCiAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IHsgY29uZmlnOiB0aGlzLmNvbmZpZywgZGF0YTogdGhpcy5jb2xldGFzeG1sIH0NCg0KICAgICAgICAgICAgLy8gc2FsdmEgZW0gYXJxdWl2byB0ZXh0byAuLi4NCiAgICAgICAgICAgIGlmICh0aGlzLmRlc3Rpbm8gPT0gLTEpIHsNCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnZW52aWFDb2xldGFzOicsIHRoaXMuY29sZXRhcykNCiAgICAgICAgICAgICAgICBzYXZlVG9DU1YoIHRoaXMuY29sZXRhc05PZW50ZXIsICBgJHt0aGlzLm5vbWUudmFsdWV9LmNzdmAgKQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAodGhpcy5kZXN0aW5vID4gMCkgew0KICAgICAgICAgICAgICAgIEFwaVNlcnZpY2Uuc2V0QXV0aEhlYWRlcigpDQogICAgICAgICAgICAgICAgQXBpU2VydmljZS5wb3N0KCdTZXJ2aWNvcy9Db2xldGFzL0luc2VydCcsIHBhcmFtcykNCiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb2xldGFzID0gW10NCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sZXRhc3htbCA9ICcnDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnN1bHRhQ29sZXRhcygpDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdFRvYXN0KHsgbWVzc2FnZTogJ1JlZ2lzdHJvIHNhbHZvIGNvbSBzdWNlc3NvICEnLCB2YXJpYW50OiAnc3VjY2Vzcyd9KQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRXJybzogJywgZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0VG9hc3QoeyBtZXNzYWdlOiAnRXJybyBhbyBpbmNsdWlyIG8gcmVnaXN0cm8gIScsIHZhcmlhbnQ6ICdkYW5nZXInfSkNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgY29uc3VsdGFDb2xldGFzKCkgew0KICAgICAgICAgICAgQXBpU2VydmljZS5zZXRBdXRoSGVhZGVyKCkNCiAgICAgICAgICAgIEFwaVNlcnZpY2UucG9zdCgnU2Vydmljb3MvQ29sZXRhcy9TZWxlY3QnLCB7fSkNCiAgICAgICAgICAgICAgICAudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY29uc3VsdGFjb2xldGFzID0gW10NCiAgICAgICAgICAgICAgICAgICAgaWYgKChyZXMuc3RhdHVzID09ICcyMDAnKSAmJiAocmVzLmRhdGEuU3VjY2VzcyA9PSAnVHJ1ZScpKQ0KICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29uc3VsdGFjb2xldGFzID0gcmVzLmRhdGEuRGF0YQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRXJybzogJywgZSkNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3RUb2FzdCh7IG1lc3NhZ2U6ICdFcnJvIGFvIGNvbnN1bHRhciBjb2xldGFzICEnLCB2YXJpYW50OiAnZGFuZ2VyJ30pDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgfSwNCiAgICAgICAgYnVzY2FUaXBvc0NvbGV0YXMoKSB7DQogICAgICAgICAgICBBcGlTZXJ2aWNlLnNldEF1dGhIZWFkZXIoKQ0KICAgICAgICAgICAgQXBpU2VydmljZS5wb3N0KCdTZXJ2aWNvcy9Db2xldGFzVGlwb3MvU2VsZWN0Jywge30pDQogICAgICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgICAgICAgaWYgKChyZXMuc3RhdHVzID09ICcyMDAnKSAmJiAocmVzLmRhdGEuU3VjY2VzcyA9PSAnVHJ1ZScgfHwgcmVzLmRhdGEuU3VjY2VzcykpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZXN0aW5vcyA9IFtdOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3Rpbm9zID0gcmVzLmRhdGEuRGF0YS5tYXAobSA9PiAoeyB2YWx1ZTogbS5pZCwgdGV4dDogbS5EZXNjcmljYW8gfSkpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3Rpbm9zLnB1c2goeyB2YWx1ZTogbnVsbCwgdGV4dDogJy0nLCBkaXNhYmxlZDogdHJ1ZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZXN0aW5vcy5wdXNoKHsgdmFsdWU6IC0xLCB0ZXh0OiAnU2FsdmFyIGVtIEFycXVpdm8gQ1NWJyB9KTsNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIC5jYXRjaChlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0Vycm86ICcsIGUpDQogICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0VG9hc3QoeyBtZXNzYWdlOiAnRXJybyBhbyBjb25zdWx0YXIgdGlwb3MgZGUgY29sZXRhcyAhJywgdmFyaWFudDogJ2Rhbmdlcid9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/coleta/views","sourcesContent":["<template>\r\n    <div>\r\n        <!-- <b-button @click=\"buscaTiposColetas\">Busca tipos de coletas</b-button> -->\r\n        <b-card class=\"m-2\" bg-variant=\"dark\" text-variant=\"warning\">\r\n            <b-form-group \r\n                id=\"input-group-destino\"\r\n                label=\"Destino\"\r\n                label-for=\"input-destino\">\r\n                <b-form-select\r\n                    autofocus\r\n                    id=\"input-destino\"\r\n                    v-model=\"destino\"\r\n                    :options=\"destinos\">\r\n                </b-form-select>\r\n            </b-form-group>             \r\n        </b-card>\r\n\r\n        <ColetaEAN\r\n            :disableenvio=\"(destino || 0) == 0\"\r\n            :eanfields=\"[{key: 'ean', label: 'Ean'}, {key: 'actions', label: 'Ações'}]\"\r\n            :histfields=\"[{key: 'ean', label: 'Ean'}, {key: 'actions', label: 'Ações'}]\"\r\n            :customPages=\"pageColetas\"\r\n            @evt-coletas-xml=\"onEnviaColetaXML\"\r\n            @evt-coletas=\"onEnviaColeta\"\r\n        />\r\n\r\n<!--         coletasxml: {{coletasxml}}<br>\r\n        destino: {{(destino || 0) == 0}}<br>\r\n        config: {{config}} -->\r\n\r\n        <b-modal\r\n            id=\"modal-enviar\"\r\n            title=\"Escolha o destino da coleta\"\r\n            ok-only\r\n            :ok-disabled=\"!destino\"\r\n            @ok=\"enviaColetas\">\r\n\r\n            <b-form-group \r\n                id=\"input-group-destino\"\r\n                label=\"Destino\"\r\n                label-for=\"input-destino\">\r\n                <b-form-select\r\n                    id=\"input-destino\"\r\n                    v-model=\"destino\"\r\n                    :options=\"destinos\">\r\n                </b-form-select>\r\n            </b-form-group> \r\n\r\n        </b-modal>\r\n\r\n        <Inputmodal\r\n            idmodal=\"coletacategoria\"\r\n            v-model=\"nome.value\"\r\n            :type=\"nome.type\"\r\n            :title=\"nome.title\"\r\n            :placeholder=\"nome.placeholder\"\r\n            @inputmodel=\"enviaColetas\"\r\n        />\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ApiService from '../../../services/api.service'\r\nimport ColetaEAN from '../../../components/ColetaEAN'\r\nimport { saveToCSV } from '../../../services/csv'\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n    name: 'ColetaLivre',\r\n    beforeMount() {\r\n        this.consultaColetas()\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            nome: {\r\n                value: '',\r\n                show: false,\r\n                type: 'text',\r\n                title: 'Nome da categoria',\r\n                placeholder: 'Informe o nome da categoria'\r\n            },\r\n            coletas: [],\r\n            consultacoletas: [],\r\n            coletasxml: '',\r\n            destino: null,\r\n            destinos: [\r\n                { value: 1, text: 'Conferência de Imobilizados' },\r\n                { value: 2, text: 'Conferência Expedições' },\r\n                { value: null, text: '-', disabled: true },\r\n                { value: -1, text: 'Salvar em Arquivo CSV' },\r\n            ],\r\n        }\r\n    },\r\n\r\n    components: {\r\n        ColetaEAN\r\n    },\r\n\r\n    computed: {\r\n        config() {\r\n            return `<data><idColetaTipo>${this.destino}</idColetaTipo><NomeCategoria>${this.nome.value}</NomeCategoria></data>`\r\n        },\r\n        coletasNOenter() {\r\n          return this.coletas.map(c => { return { ean: c.ean.replace('\\n', '') } });\r\n        },\r\n        pageColetas() {\r\n            return [\r\n                { title: `Coletas Enviadas ( ${this.consultacoletas.length} )`\r\n                , table: true\r\n                , data: this.consultacoletas\r\n                , fields: [\r\n                    { key: 'Categoria', sortable: true },\r\n                    { key: 'Ean', sortable: true },\r\n                    { key: 'DataColeta', sortable: true }\r\n                ]}\r\n            ]\r\n        }\r\n    },\r\n\r\n    beforeMount() {\r\n      this.buscaTiposColetas();\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions(['actToast']),\r\n\r\n        onEnviaColetaXML(coletas) {\r\n            this.coletasxml = coletas\r\n            this.$bvModal.show('coletacategoria')\r\n        },\r\n        onEnviaColeta(coletas) {\r\n            this.coletas = coletas\r\n            this.$bvModal.show('coletacategoria')\r\n        },\r\n        enviaColetas() {\r\n            const params = { config: this.config, data: this.coletasxml }\r\n\r\n            // salva em arquivo texto ...\r\n            if (this.destino == -1) {\r\n                // console.log('enviaColetas:', this.coletas)\r\n                saveToCSV( this.coletasNOenter,  `${this.nome.value}.csv` )\r\n            }\r\n\r\n            if (this.destino > 0) {\r\n                ApiService.setAuthHeader()\r\n                ApiService.post('Servicos/Coletas/Insert', params)\r\n                    .then((res) => {\r\n                        this.coletas = []\r\n                        this.coletasxml = ''\r\n                        this.consultaColetas()\r\n                        this.actToast({ message: 'Registro salvo com sucesso !', variant: 'success'})\r\n                    })\r\n                    .catch(e => {\r\n                        console.log('Erro: ', e)\r\n                        this.actToast({ message: 'Erro ao incluir o registro !', variant: 'danger'})\r\n                    })\r\n            }\r\n        },\r\n        consultaColetas() {\r\n            ApiService.setAuthHeader()\r\n            ApiService.post('Servicos/Coletas/Select', {})\r\n                .then((res) => {\r\n                    this.consultacoletas = []\r\n                    if ((res.status == '200') && (res.data.Success == 'True'))\r\n                      this.consultacoletas = res.data.Data\r\n                })\r\n                .catch(e => {\r\n                    console.log('Erro: ', e)\r\n                    this.actToast({ message: 'Erro ao consultar coletas !', variant: 'danger'})\r\n                })\r\n        },\r\n        buscaTiposColetas() {\r\n            ApiService.setAuthHeader()\r\n            ApiService.post('Servicos/ColetasTipos/Select', {})\r\n                .then((res) => {\r\n                  if ((res.status == '200') && (res.data.Success == 'True' || res.data.Success)) {\r\n                    this.destinos = [];\r\n                    this.destinos = res.data.Data.map(m => ({ value: m.id, text: m.Descricao }));\r\n                    this.destinos.push({ value: null, text: '-', disabled: true });\r\n                    this.destinos.push({ value: -1, text: 'Salvar em Arquivo CSV' });\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                    console.log('Erro: ', e)\r\n                    this.actToast({ message: 'Erro ao consultar tipos de coletas !', variant: 'danger'})\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}