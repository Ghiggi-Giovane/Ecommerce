{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\node_modules\\vue-quaggajs\\src\\Scanner.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\node_modules\\vue-quaggajs\\src\\Scanner.vue","mtime":1670977936060},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWFnZ2EgZnJvbSAncXVhZ2dhJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUXVhZ2dhU2Nhbm5lcicsCiAgcHJvcHM6IHsKICAgIG9uRGV0ZWN0ZWQ6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQocmVzdWx0KSB7CiAgICAgICAgY29uc29sZS5sb2coJ2RldGVjdGVkOiAnLCByZXN1bHQpOwogICAgICB9LAogICAgfSwKICAgIG9uUHJvY2Vzc2VkOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0KHJlc3VsdCkgewogICAgICAgIGxldCBkcmF3aW5nQ3R4ID0gUXVhZ2dhLmNhbnZhcy5jdHgub3ZlcmxheTsKCiAgICAgICAgbGV0IGRyYXdpbmdDYW52YXMgPSBRdWFnZ2EuY2FudmFzLmRvbS5vdmVybGF5OwoKICAgICAgICBpZiAocmVzdWx0KSB7CiAgICAgICAgICBpZiAocmVzdWx0LmJveGVzKSB7CiAgICAgICAgICAgIGRyYXdpbmdDdHguY2xlYXJSZWN0KAogICAgICAgICAgICAgIDAsCiAgICAgICAgICAgICAgMCwKICAgICAgICAgICAgICBwYXJzZUludChkcmF3aW5nQ2FudmFzLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSksCiAgICAgICAgICAgICAgcGFyc2VJbnQoZHJhd2luZ0NhbnZhcy5nZXRBdHRyaWJ1dGUoJ2hlaWdodCcpKQogICAgICAgICAgICApOwogICAgICAgICAgICByZXN1bHQuYm94ZXMKICAgICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGJveCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGJveCAhPT0gcmVzdWx0LmJveDsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uKGJveCkgewogICAgICAgICAgICAgICAgUXVhZ2dhLkltYWdlRGVidWcuZHJhd1BhdGgoYm94LCB7IHg6IDAsIHk6IDEgfSwgZHJhd2luZ0N0eCwgewogICAgICAgICAgICAgICAgICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgICAgICAgICAgbGluZVdpZHRoOiAyLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAocmVzdWx0LmJveCkgewogICAgICAgICAgICBRdWFnZ2EuSW1hZ2VEZWJ1Zy5kcmF3UGF0aChyZXN1bHQuYm94LCB7IHg6IDAsIHk6IDEgfSwgZHJhd2luZ0N0eCwgewogICAgICAgICAgICAgIGNvbG9yOiAnIzAwRicsCiAgICAgICAgICAgICAgbGluZVdpZHRoOiAyLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAocmVzdWx0LmNvZGVSZXN1bHQgJiYgcmVzdWx0LmNvZGVSZXN1bHQuY29kZSkgewogICAgICAgICAgICBRdWFnZ2EuSW1hZ2VEZWJ1Zy5kcmF3UGF0aCgKICAgICAgICAgICAgICByZXN1bHQubGluZSwKICAgICAgICAgICAgICB7IHg6ICd4JywgeTogJ3knIH0sCiAgICAgICAgICAgICAgZHJhd2luZ0N0eCwKICAgICAgICAgICAgICB7IGNvbG9yOiAncmVkJywgbGluZVdpZHRoOiAzIH0KICAgICAgICAgICAgKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICB9LAogICAgcmVhZGVyVHlwZXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsnY29kZV8xMjhfcmVhZGVyJ10sCiAgICB9LAogICAgcmVhZGVyU2l6ZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgd2lkdGg6IDY0MCwKICAgICAgICBoZWlnaHQ6IDQ4MCwKICAgICAgfSksCiAgICAgIHZhbGlkYXRvcjogbyA9PgogICAgICAgIHR5cGVvZiBvLndpZHRoID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygby5oZWlnaHQgPT09ICdudW1iZXInLAogICAgfSwKICAgIGFzcGVjdFJhdGlvOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHsKICAgICAgICBtaW46IDEsCiAgICAgICAgbWF4OiAyLAogICAgICB9KSwKICAgICAgdmFsaWRhdG9yOiBvID0+IHR5cGVvZiBvLm1pbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG8ubWF4ID09PSAnbnVtYmVyJywKICAgIH0sCiAgfSwKICBkYXRhOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7CiAgICAgIHF1YWdnYVN0YXRlOiB7CiAgICAgICAgaW5wdXRTdHJlYW06IHsKICAgICAgICAgIHR5cGU6ICdMaXZlU3RyZWFtJywKICAgICAgICAgIGNvbnN0cmFpbnRzOiB7CiAgICAgICAgICAgIHdpZHRoOiB7IG1pbjogdGhpcy5yZWFkZXJTaXplLndpZHRoIH0sCiAgICAgICAgICAgIGhlaWdodDogeyBtaW46IHRoaXMucmVhZGVyU2l6ZS5oZWlnaHQgfSwKICAgICAgICAgICAgZmFjaW5nTW9kZTogJ2Vudmlyb25tZW50JywKICAgICAgICAgICAgYXNwZWN0UmF0aW86IHsgbWluOiAxLCBtYXg6IDIgfSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBsb2NhdG9yOiB7CiAgICAgICAgICBwYXRjaFNpemU6ICdtZWRpdW0nLAogICAgICAgICAgaGFsZlNhbXBsZTogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIG51bU9mV29ya2VyczogMiwKICAgICAgICBmcmVxdWVuY3k6IDEwLAogICAgICAgIGRlY29kZXI6IHsKICAgICAgICAgIHJlYWRlcnM6IHRoaXMucmVhZGVyVHlwZXMsCiAgICAgICAgfSwKICAgICAgICBsb2NhdGU6IHRydWUsCiAgICAgIH0sCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIG9uRGV0ZWN0ZWQ6IGZ1bmN0aW9uKG9sZFZhbHVlLCBuZXdWYWx1ZSkgewogICAgICBpZiAob2xkVmFsdWUpIFF1YWdnYS5vZmZEZXRlY3RlZChvbGRWYWx1ZSk7CiAgICAgIGlmIChuZXdWYWx1ZSkgUXVhZ2dhLm9uRGV0ZWN0ZWQobmV3VmFsdWUpOwogICAgfSwKICAgIG9uUHJvY2Vzc2VkOiBmdW5jdGlvbihvbGRWYWx1ZSwgbmV3VmFsdWUpIHsKICAgICAgaWYgKG9sZFZhbHVlKSBRdWFnZ2Eub2ZmUHJvY2Vzc2VkKG9sZFZhbHVlKTsKICAgICAgaWYgKG5ld1ZhbHVlKSBRdWFnZ2Eub25Qcm9jZXNzZWQobmV3VmFsdWUpOwogICAgfSwKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uKCkgewogICAgUXVhZ2dhLmluaXQodGhpcy5xdWFnZ2FTdGF0ZSwgZnVuY3Rpb24oZXJyKSB7CiAgICAgIGlmIChlcnIpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9CiAgICAgIFF1YWdnYS5zdGFydCgpOwogICAgfSk7CiAgICBRdWFnZ2Eub25EZXRlY3RlZCh0aGlzLm9uRGV0ZWN0ZWQpOwogICAgUXVhZ2dhLm9uUHJvY2Vzc2VkKHRoaXMub25Qcm9jZXNzZWQpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbigpIHsKICAgIGlmICh0aGlzLm9uRGV0ZWN0ZWQpIFF1YWdnYS5vZmZEZXRlY3RlZCh0aGlzLm9uRGV0ZWN0ZWQpOwogICAgaWYgKHRoaXMub25Qcm9jZXNzZWQpIFF1YWdnYS5vZmZQcm9jZXNzZWQodGhpcy5vZmZQcm9jZXNzZWQpOwogICAgUXVhZ2dhLnN0b3AoKTsKICB9LAp9Owo="},{"version":3,"sources":["Scanner.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scanner.vue","sourceRoot":"node_modules/vue-quaggajs/src","sourcesContent":["<template>\n  <div id=\"interactive\" class=\"viewport scanner\">\n    <video />\n    <canvas class=\"drawingBuffer\" />\n  </div>\n</template>\n\n<script>\nimport Quagga from 'quagga';\n\nexport default {\n  name: 'QuaggaScanner',\n  props: {\n    onDetected: {\n      type: Function,\n      default(result) {\n        console.log('detected: ', result);\n      },\n    },\n    onProcessed: {\n      type: Function,\n      default(result) {\n        let drawingCtx = Quagga.canvas.ctx.overlay;\n\n        let drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n          if (result.boxes) {\n            drawingCtx.clearRect(\n              0,\n              0,\n              parseInt(drawingCanvas.getAttribute('width')),\n              parseInt(drawingCanvas.getAttribute('height'))\n            );\n            result.boxes\n              .filter(function(box) {\n                return box !== result.box;\n              })\n              .forEach(function(box) {\n                Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                  color: 'green',\n                  lineWidth: 2,\n                });\n              });\n          }\n          if (result.box) {\n            Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n              color: '#00F',\n              lineWidth: 2,\n            });\n          }\n\n          if (result.codeResult && result.codeResult.code) {\n            Quagga.ImageDebug.drawPath(\n              result.line,\n              { x: 'x', y: 'y' },\n              drawingCtx,\n              { color: 'red', lineWidth: 3 }\n            );\n          }\n        }\n      },\n    },\n    readerTypes: {\n      type: Array,\n      default: () => ['code_128_reader'],\n    },\n    readerSize: {\n      type: Object,\n      default: () => ({\n        width: 640,\n        height: 480,\n      }),\n      validator: o =>\n        typeof o.width === 'number' && typeof o.height === 'number',\n    },\n    aspectRatio: {\n      type: Object,\n      default: () => ({\n        min: 1,\n        max: 2,\n      }),\n      validator: o => typeof o.min === 'number' && typeof o.max === 'number',\n    },\n  },\n  data: function() {\n    return {\n      quaggaState: {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: { min: this.readerSize.width },\n            height: { min: this.readerSize.height },\n            facingMode: 'environment',\n            aspectRatio: { min: 1, max: 2 },\n          },\n        },\n        locator: {\n          patchSize: 'medium',\n          halfSample: true,\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n          readers: this.readerTypes,\n        },\n        locate: true,\n      },\n    };\n  },\n  watch: {\n    onDetected: function(oldValue, newValue) {\n      if (oldValue) Quagga.offDetected(oldValue);\n      if (newValue) Quagga.onDetected(newValue);\n    },\n    onProcessed: function(oldValue, newValue) {\n      if (oldValue) Quagga.offProcessed(oldValue);\n      if (newValue) Quagga.onProcessed(newValue);\n    },\n  },\n  mounted: function() {\n    Quagga.init(this.quaggaState, function(err) {\n      if (err) {\n        return console.error(err);\n      }\n      Quagga.start();\n    });\n    Quagga.onDetected(this.onDetected);\n    Quagga.onProcessed(this.onProcessed);\n  },\n  destroyed: function() {\n    if (this.onDetected) Quagga.offDetected(this.onDetected);\n    if (this.onProcessed) Quagga.offProcessed(this.offProcessed);\n    Quagga.stop();\n  },\n};\n</script>\n\n<style scoped>\n.viewport {\n  position: relative;\n}\n\n.viewport canvas,\n.viewport video {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>\n"]}]}