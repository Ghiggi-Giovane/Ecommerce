{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\covid\\views\\QrCodes.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\covid\\views\\QrCodes.vue","mtime":1701906516471},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["QrCodes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"QrCodes.vue","sourceRoot":"src/pages/covid/views","sourcesContent":["<template>\r\n  <div id=\"appprint\" class=\"m-2\">\r\n    <b-toast id=\"success-toast\" title=\"Sucesso\" variant=\"success\" solid>\r\n      {{ message_toast }}\r\n    </b-toast>\r\n\r\n    <b-toast\r\n      id=\"danger-toast\"\r\n      title=\"Ops, falha na execução\"\r\n      variant=\"danger\"\r\n      solid\r\n    >\r\n      {{ message_toast }}\r\n    </b-toast>\r\n\r\n    <b-card>\r\n      <template #header>\r\n        <h3 class=\"mb-0\">Impressão de QR Codes</h3>\r\n      </template>\r\n      <b-row>\r\n        <b-col cols=\"6\">\r\n          <b-form-group\r\n            id=\"input-group-emp\"\r\n            label-for=\"input-emp\"\r\n            label=\"Empresa\"\r\n          >\r\n            <b-overlay :show=\"gtxempresasLoading\" rounded=\"sm\">\r\n              <b-form-select\r\n                v-model=\"formprint.emp\"\r\n                :options=\"gtxempresas\"\r\n                @change=\"actSetores(formprint.emp)\"\r\n              ></b-form-select>\r\n            </b-overlay>\r\n          </b-form-group>\r\n        </b-col>\r\n\r\n        <b-col cols=\"6\">\r\n          <b-form-group\r\n            id=\"input-group-setores\"\r\n            label-for=\"input-setores\"\r\n            label=\"Setores\"\r\n          >\r\n            <b-overlay :show=\"gtxsetoresLoading\" rounded=\"sm\">\r\n              <b-form-select\r\n                v-model=\"formprint.setores\"\r\n                :options=\"gtxsetores\"\r\n              ></b-form-select>\r\n            </b-overlay>\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col>\r\n          <b-form-group\r\n            id=\"input-group-codigos\"\r\n            label-for=\"input-codigos\"\r\n            label=\"Códigos Cartão Ponto\"\r\n          >\r\n            <b-form-tags\r\n              input-id=\"input-codigos\"\r\n              v-model=\"codigos\"\r\n              separator=\" ,;\"\r\n              remove-on-delete\r\n              placeholder=\"Informe os Códigos Cartão Ponto\"\r\n            ></b-form-tags>\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col style=\"text-align: right\">\r\n          <b-form-group>\r\n            <b-button\r\n              type=\"button\"\r\n              variant=\"success\"\r\n              @click=\"api_getFuncionarios\"\r\n              ><b-icon icon=\"search\" class=\"mr-2\"></b-icon>Pesquisar</b-button\r\n            >\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-modal\r\n        id=\"modal-imprimir\"\r\n        title=\"Impressão QRCodes\"\r\n        size=\"xl\"\r\n        scrollable\r\n      >\r\n        <div id=\"printarea\">\r\n          <b-container fluid style=\"display: flex;flex-flow: wrap;\">\r\n            <div\r\n              v-for=\"(func, i) of gtxfuncqrcodeData\"\r\n              :key=\"i\"\r\n              style=\"margin: 5px;width: 200px; text-align: center;\"\r\n            >\r\n              <img :src=\"renderQrcode(func)\" />\r\n              <h5>{{ func.NOME }}</h5>\r\n            </div>\r\n          </b-container>\r\n        </div>\r\n        <b-alert variant=\"warning\" show\r\n          ><b-form-checkbox id=\"canPrint\" v-model=\"canPrint\" name=\"canPrint\"\r\n            >Confirme se todos os QRCodes foram carregados antes de\r\n            imprimir.</b-form-checkbox\r\n          ></b-alert\r\n        >\r\n        <template #modal-footer=\"{ ok, cancel }\">\r\n          <b-button\r\n            type=\"button\"\r\n            variant=\"primary\"\r\n            @click=\"imprimir('printarea')\"\r\n            :disabled=\"!canPrint\"\r\n            >Imprimir</b-button\r\n          >\r\n          <b-button type=\"button\" variant=\"secondary\" @click=\"cancel\"\r\n            >Cancelar</b-button\r\n          >\r\n        </template>\r\n      </b-modal>\r\n\r\n      <!--\r\n\r\nformprint\r\n<pre>\r\n\t{{ formprint }}\r\n</pre>\r\n\r\ngtxempresas: {{ gtxempresas }}<br/>\r\n\r\ngtxsetores: {{ gtxsetores }}<br/>\r\n\r\ngtxfuncqrcodeData: {{ gtxfuncqrcodeData }}<br/>\r\n\r\n-->\r\n    </b-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"QRCodes\",\r\n\r\n  data() {\r\n    return {\r\n      formprint: {\r\n        emp: 8,\r\n        setores: \"\",\r\n        codigos: \"\",\r\n        margem: 0,\r\n      },\r\n      api: \"https://servicos.idelli.com.br/GrupoK1/api/Servicos/\",\r\n      codigos: \"\",\r\n      setores: \"\",\r\n      message_toast: \"\",\r\n      token: localStorage.getItem(\"anontoken\"),\r\n      listafunc: [],\r\n      listaemp: [],\r\n      listasetores: [],\r\n      canPrint: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"gtxempresas\",\r\n      \"gtxempresasLoading\",\r\n      \"gtxsetores\",\r\n      \"gtxsetoresLoading\",\r\n      \"gtxfuncqrcodeData\",\r\n    ]),\r\n\r\n    cmp_listaemp() {\r\n      return this.listaemp ? this.listaemp.length == 0 : false;\r\n    },\r\n    cmp_listasetores() {\r\n      return this.listasetores ? this.listasetores.length == 0 : false;\r\n    },\r\n    cmp_listafunc() {\r\n      return this.listafunc ? this.listafunc.length == 0 : false;\r\n    },\r\n  },\r\n\r\n  created() {\r\n    /*\r\n \t    this.getToken().then(() => {\r\n\t\t\tthis.getEmpresas();\r\n\t\t\tthis.getSetores();\r\n\t\t})\r\n\t\t*/\r\n    this.actEmpresas();\r\n\r\n    if (this.formprint.emp > 0) this.actSetores(this.formprint.emp);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"actEmpresas\", \"actSetores\", \"actfuncqrcodebuscar\"]),\r\n\r\n    async getToken() {\r\n      var config = {\r\n        method: \"GET, POST, PUT, DELETE\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\":\r\n            \"Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      };\r\n      await axios\r\n        .post(\r\n          \"https://servicos.idelli.com.br/GrupoK1/api/Authentication/GetAnonymousToken\",\r\n          config\r\n        )\r\n        .then(\r\n          (response) => {\r\n            // console.log('Token adquirido...', response);\r\n            this.token = response.data.TokenAccess;\r\n            // localStorage.setItem('anonToken', this.token);\r\n\r\n            // atualiza os dados ...\r\n            // Empresas ...\r\n            this.getEmpresas();\r\n            // Setores ...\r\n            this.getSetores();\r\n          },\r\n          (error) => {\r\n            this.message_toast = \"Ocorreu um erro: \" + error.message;\r\n            this.$bvToast.show(\"danger-toast\");\r\n          }\r\n        );\r\n    },\r\n\r\n    getEmpresas() {\r\n      this.api_get(\"Empresas\", \"\", \"Codigo\", \"Reduzido\").then(\r\n        (r) => (this.listaemp = r)\r\n      );\r\n    },\r\n\r\n    getSetores() {\r\n      this.api_get(\r\n        \"Funcionarios/Setores\",\r\n        { Emp: this.formprint.emp },\r\n        \"Codigo\",\r\n        \"Descricao\"\r\n      ).then((r) => {\r\n        this.listasetores = r;\r\n        this.listasetores.unshift({\r\n          value: null,\r\n          text: \"-- Todos os Setores --\",\r\n        });\r\n      });\r\n    },\r\n\r\n    api_getFuncionarios() {\r\n      // volta a solicitar a confirmação da impressão...\r\n      this.canPrint = false;\r\n\r\n      // junta as tags de códigos informadas ...\r\n      this.formprint.codigos = this.codigos.join(\";\");\r\n      // junta as tags de códigos informadas ...\r\n      // this.formprint.setores = this.setores.join(';');\r\n\r\n      /*\r\n\t\tvar config = {\r\n\t\t\t\"method\": \"GET, POST, PUT, DELETE\",\r\n\t\t\t\"params\": { ...this.formprint },\r\n\t\t\t\"headers\": {\r\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t\t\t\"Access-Control-Allow-Headers\": \"Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Accept\": \"application/json\",\r\n\t\t\t\t\"Authorization\": \"Bearer \" + this.token\r\n\t\t\t\t}\r\n\t\t};\r\n\t\t*/\r\n\r\n      // console.log(config);\r\n      this.actfuncqrcodebuscar(this.formprint).then((d) =>\r\n        this.$bvModal.show(\"modal-imprimir\")\r\n      );\r\n      /*\r\n\t\taxios\r\n\t\t  .get(url, config)\r\n\t\t  .then(response => {\r\n\t\t\tif (response.data.Success == \"True\") {\r\n\t\t\t  this.listafunc = response.data.Data;\r\n\t\t\t  this.$bvModal.show('modal-imprimir');\r\n\t\t\t} else {\r\n\t\t\t  this.listafunc = [];\r\n\t\t\t  this.message_toast = 'Nenhum registro encontrado!';\r\n\t\t\t  this.$bvToast.show('danger-toast');\r\n\t\t\t}\r\n\t\t  });\r\n\t\t*/\r\n    }, // api_getFuncionarios()\r\n\r\n    // chamada GET da api do grupo k1 de forma genérica ...\r\n    async api_get(route, params, value, text) {\r\n      var url = `${this.api}${route}`;\r\n\r\n      var config = {\r\n        method: \"GET, POST, PUT, DELETE\",\r\n        params: { ...params },\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\":\r\n            \"Access-Control-Allow-Methods, Access-Control-Allow-Origin, Origin, Accept, Content-Type\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + this.token,\r\n        },\r\n      };\r\n\r\n      // console.log(config);\r\n      return await axios.get(url, config).then(\r\n        (response) => {\r\n          if (response.data.Success == \"True\") {\r\n            if (value && text) {\r\n              return this.renderSelect(response.data.Data, value, text);\r\n            } else {\r\n              return response.data.Data || [];\r\n            }\r\n          } else {\r\n            return [];\r\n            this.message_toast = \"Nenhum registro encontrado!\";\r\n            this.$bvToast.show(\"danger-toast\");\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.response.status === 401) {\r\n            // this.getToken();\r\n            console.log(\"this.getToken()\");\r\n          }\r\n        }\r\n      );\r\n    }, // api_get(route, params, value, text)\r\n\r\n    // devolve o array no formato dos options dos selects do bootstrap ...\r\n    renderSelect(data, value, text) {\r\n      return data.map((d) => {\r\n        return { value: d[value], text: d[text] };\r\n      });\r\n    },\r\n\r\n    renderQrcode(func) {\r\n      return `http://chart.apis.google.com/chart?cht=qr&chs=200x200&chl=${func.UI}&choe=UTF-8&chld=undefined`;\r\n    },\r\n\r\n    imprimir(tagid) {\r\n      const el = document.getElementById(tagid).innerHTML;\r\n      this.printElementContent(el);\r\n    },\r\n\r\n    printElementContent(el) {\r\n      var printWindow = window.open(\r\n        \"\",\r\n        \"Impressão de QRCodes\",\r\n        \"resizable,scrollbars,status\"\r\n      );\r\n\r\n      printWindow.document.write(\r\n        \"<html><head><title>\" + document.title + \"</title>\"\r\n      );\r\n\r\n      printWindow.document.write(\r\n        '<link type=\"text/css\" rel=\"stylesheet\" href=\"//unpkg.com/bootstrap/dist/css/bootstrap.min.css\"/>'\r\n      );\r\n\r\n      printWindow.document.write(\"</head><body>\");\r\n      printWindow.document.write(el);\r\n      printWindow.document.write(\"</body></html>\");\r\n\r\n      //printWindow.document.close(); // necessary for IE >= 10\r\n      printWindow.focus(); // necessary for IE >= 10*/\r\n\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n        printWindow.close();\r\n        this.$bvModal.hide(\"modal-imprimir\");\r\n      }, 2000);\r\n\r\n      return true;\r\n    }, // printElementContent(el)\r\n  }, // methods\r\n};\r\n</script>\r\n"]}]}