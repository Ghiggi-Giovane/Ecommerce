{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\maquinasuz\\components\\Maquinas.vue?vue&type=template&id=74e4d41e&scoped=true&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\maquinasuz\\components\\Maquinas.vue","mtime":1670977910633},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670977935849},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiTWFxdWluYXMiIH0sCiAgICBbCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiaDIiLCBbX3ZtLl92KF92bS5fcyhfdm0ubXNnKSldKSwKICAgICAgX2MoImhyIiksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjZW50ZXJlZCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogImRhdGVwaWNrZXIiIH0gfSwgW192bS5fdigiRGF0YToiKV0pLAogICAgICAgICAgX2MoImItZm9ybS1kYXRlcGlja2VyIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICJ2YWx1ZS1hcy1kYXRlIjogIiIsCiAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5kaXNhYmxlZCwKICAgICAgICAgICAgICBpZDogImRhdGEiLAogICAgICAgICAgICAgIG5hbWU6ICJkYXRhIgogICAgICAgICAgICB9LAogICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5EYXRhQ2hlY2ssCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sICJEYXRhQ2hlY2siLCAkJHYpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybS5EYXRhQ2hlY2siCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKCJociIpLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICBbCiAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIk3DoXF1aW5hczoiKV0pLAogICAgICAgICAgX2MoImItZm9ybS1zZWxlY3QiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiZm9ybSIsIG9wdGlvbnM6IF92bS5saXN0X21hcSwgbmFtZTogInNlbGVjdF9tYXEiIH0sCiAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLklkU3Vic2V0b3IsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sICJJZFN1YnNldG9yIiwgJCR2KQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZvcm0uSWRTdWJzZXRvciIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImhyIiksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIFsKICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiT3JkZW0gY29ycmV0YT8iKV0pLAogICAgICAgICAgX2MoImItZm9ybS1zZWxlY3QiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaWQ6ICJmb3JtIiwKICAgICAgICAgICAgICBvcHRpb25zOiBfdm0ubGlzdF9vcmRlbSwKICAgICAgICAgICAgICBuYW1lOiAic2VsZWN0X29yZGVtIgogICAgICAgICAgICB9LAogICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5PcmRlbUNvcnJldGEsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sICJPcmRlbUNvcnJldGEiLCAkJHYpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybS5PcmRlbUNvcnJldGEiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKCJociIpLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICBbCiAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIlN0YXR1cyBjb3JyZXRvPyIpXSksCiAgICAgICAgICBfYygiYi1mb3JtLXJhZGlvLWdyb3VwIiwgewogICAgICAgICAgICBhdHRyczogeyBvcHRpb25zOiBfdm0ubGlzdF9zdGF0dXMsIG5hbWU6ICJzdGF0dXNfb3B0aW9ucyIgfSwKICAgICAgICAgICAgb246IHsgY2hhbmdlOiBfdm0uYnRuYW5vdGFjYW8gfSwKICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uU3RhdHVzLAogICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCAiU3RhdHVzIiwgJCR2KQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZvcm0uU3RhdHVzIgogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImItbW9kYWwiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICByZWY6ICJtb2RhbCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6ICJtb2RhbC1wcmV2ZW50LWNsb3NpbmciLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAiQW5vdGHDp8OjbyBkZSBTdGF0dXMiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgc2hvdzogX3ZtLnJlc2V0TW9kYWwsCiAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiBfdm0ucmVzZXRNb2RhbCwKICAgICAgICAgICAgICAgICAgICBvazogX3ZtLmhhbmRsZU9rLAogICAgICAgICAgICAgICAgICAgIGNhbmNlbDogX3ZtLmxpbXBhckFub3QKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImZvcm0iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHJlZjogImZvcm0iLAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlU3VibWl0LmFwcGx5KG51bGwsIGFyZ3VtZW50cykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiQW5vdGHDp8OjbyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibGFiZWwtZm9yIjogIm5hbWUtaW5wdXQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImludmFsaWQtZmVlZGJhY2siOiAiQW5vdGHDp8OjbyBuZWNlc3PDoXJpYSEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IF92bS5uYW1lU3RhdGUKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLXRleHRhcmVhIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJhbm90X3N0YXR1cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0ubmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uQW5vdGFjYW8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybSwgIkFub3RhY2FvIiwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybS5Bbm90YWNhbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuZm9ybS5TdGF0dXMgPT0gIjAiLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGhpcy5mb3JtLlN0YXR1cyA9PSAnMCciCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyBpZDogIkFub3RhY2FvIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfdm0uX3YoIiBBbm90YcOnw6NvOiAiKSwKICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5mb3JtLkFub3RhY2FvKSArICIgIikKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiaHIiKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgWwogICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJSZWplaXRvcyBjb3JyZXRvcz8iKV0pLAogICAgICAgICAgX2MoImItZm9ybS1yYWRpby1ncm91cCIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgb3B0aW9uczogX3ZtLmxpc3RfcmVqZWl0bywgbmFtZTogInJlamVpdG9fb3B0aW9ucyIgfSwKICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uUmVqZWl0b3MsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sICJSZWplaXRvcyIsICQkdikKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtLlJlamVpdG9zIgogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJociIpCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIFsKICAgICAgICAgIF92bS5mb3JtLmlkID09PSAiMCIKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYi1tb2RhbCIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1iLW1vZGFsLm1vZGFsLTIiLAogICAgICAgICAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7ICJtb2RhbC0yIjogdHJ1ZSB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImJ1dF9zYWx2YXIiLCBwaWxsOiAiIiwgdmFyaWFudDogInN1Y2Nlc3MiIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uYnRuc2FsdmFyIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJTYWx2YXIgIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICA6IF9jKAogICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJidXRfbGltcGFyIiwgcGlsbDogIiIsIHZhcmlhbnQ6ICJ3YXJuaW5nIiB9LAogICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmxpbXBhckRhZG9zIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCJMaW1wYXIgIildCiAgICAgICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBuYW1lOiAiYi1tb2RhbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LWItbW9kYWwubW9kYWwtMyIsCiAgICAgICAgICAgICAgICAgIG1vZGlmaWVyczogeyAibW9kYWwtMyI6IHRydWUgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJidXRfbGlzdGFyIiwgcGlsbDogIiIsIHZhcmlhbnQ6ICJpbmZvIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkxpc3RhciAiKV0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImItbW9kYWwiLAogICAgICAgIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIGlkOiAibW9kYWwtMyIsCiAgICAgICAgICAgIHRpdGxlOiAiTGlzdGEgZGUgY29uZmVyw6puY2lhcyBhbnRlcmlvcmVzISIsCiAgICAgICAgICAgICJvay10aXRsZSI6ICJCdXNjYXIiLAogICAgICAgICAgICAiY2FuY2VsLXRpdGxlIjogIkNhbmNlbGFyIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7IG9rOiBfdm0uYnRubGlzdGFyLCBjYW5jZWw6IF92bS5saW1wYXJEYWRvcyB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJNb2RhbCIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJkYXRhTW9kYWwiIH0gfSwgW192bS5fdigiRGF0YToiKV0pLAogICAgICAgICAgICAgIF9jKCJiLWZvcm0tZGF0ZXBpY2tlciIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJ2YWx1ZS1hcy1kYXRlIjogIiIsIGlkOiAiZGF0YU1vZGFsIiwgbmFtZTogImRhdGEiIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLkRhdGEsCiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICBfdm0uRGF0YSA9ICQkdgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiRGF0YSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIk3DoXF1aW5hczoiKV0pLAogICAgICAgICAgICAgIF9jKCJiLWZvcm0tc2VsZWN0IiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgb3B0aW9uczogX3ZtLmxpc3RfbWFxLCBuYW1lOiAic2VsZWN0X21hcSIgfSwKICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uU3Vic2V0b3IsCiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICBfdm0uU3Vic2V0b3IgPSAkJHYKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIlN1YnNldG9yIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJiLW1vZGFsIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBpZDogImxpc3RNb2RhbCIsCiAgICAgICAgICAgICJvay1vbmx5IjogIiIsCiAgICAgICAgICAgICJvay10aXRsZSI6ICJDYW5jZWxhciIsCiAgICAgICAgICAgIHRpdGxlOiBfdm0uRGF0YS50b0xvY2FsZURhdGVTdHJpbmcoKQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJiLWxpc3QtZ3JvdXAiLAogICAgICAgICAgICBfdm0uX2woX3ZtLkxpc3RhZ2VtLCBmdW5jdGlvbihsaXN0KSB7CiAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgImItbGlzdC1ncm91cC1pdGVtIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAga2V5OiBsaXN0LmlkLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBidXR0b246ICIiIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5idG5MaXN0YWdlbShsaXN0KQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MobmV3IERhdGUobGlzdC5EYXRhQ2hlY2spLnRvTG9jYWxlVGltZVN0cmluZygpKSArCiAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGxpc3QuRGVzY3JpY2FvKSArCiAgICAgICAgICAgICAgICAgICAgICAiICIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBmbG9hdDogInJpZ2h0IiB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdmFyaWFudDogImRhbmdlciIsIHNpemU6ICJzbSIgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmJ0bkV4bHVpckxpc3QobGlzdCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW19jKCJiLWljb24tdHJhc2giKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}