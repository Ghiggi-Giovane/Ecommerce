{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\coleta\\components\\Coletor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\coleta\\components\\Coletor.vue","mtime":1670977910607},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Coletor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"Coletor.vue","sourceRoot":"src/pages/coleta/components","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!-- Resumo da coleta atual  -->\r\n        <b-row>\r\n            <b-col>\r\n                <b-progress :max=\"totalvolumes.t\" :variant=\"(totalvolumes.t==totalvolumes.q) ? 'success': 'primary'\" show-progress class=\"mt-1\">\r\n                    <b-progress-bar :value=\"totalvolumes.q\"></b-progress-bar>\r\n                </b-progress>\r\n            </b-col>\r\n\r\n            <b-col cols=\"3\" class=\"displayflex justcenter\">\r\n                <BadgeCounter :total=\"totalvolumes.t || 0\" :value=\"totalvolumes.q\"/>\r\n            </b-col>\r\n        </b-row>\r\n        <!-- FIM - Resumo da coleta atual  -->\r\n\r\n        <!-- Resumo das coletas  -->\r\n        <div style=\"text-align: center\">\r\n            <slot name=\"text\"></slot>\r\n\r\n            <b-form-input type=\"number\" ref=\"ean\" v-if=\"!leitor\" v-model=\"ean\" placeholder=\"Leia seu código de barras\" @blur=\"onscan(ean)\" class=\"mt-2\"></b-form-input>\r\n\r\n            <!-- Volume atual coletado  -->\r\n            <b-list-group v-if=\"coleta.selected\" class=\"mt-2\">\r\n                <b-list-group-item class=\"d-flex justify-content-between align-items-center display\">\r\n                    <div class=\"label\">\r\n                        {{ coleta.selected && (coleta.selected.display || coleta.selected.ean13) }}\r\n                        <b-progress :max=\"coleta.selected.t * (coleta.selected.v || 1)\" :variant=\"(coleta.selected.t==coleta.selected.q) ? 'success': 'primary'\" show-progress>\r\n                            <b-progress-bar :value=\"coleta.selected.vt\"></b-progress-bar>\r\n                        </b-progress>\r\n                    </div>\r\n                    <div class=\"badges\">\r\n                        <b-badge v-if=\"coleta.selected.t\" variant=\"info\" class=\"mr-1\">\r\n                            {{(selectedvolumes.t) || 0}}\r\n                        </b-badge>\r\n                        <b-badge :variant=\"(coleta.selected.q==0) ? 'secondary' : 'warning'\" class=\"mr-1\">\r\n                            {{selectedvolumes.q || 0}}\r\n                        </b-badge>\r\n                        <b-badge v-if=\"coleta.selected.t\" variant=\"danger\" class=\"mr-1\">\r\n                            {{(selectedvolumes.t - selectedvolumes.q) || 0}}\r\n                        </b-badge>\r\n\r\n                        <b-button variant=\"primary\" block v-b-toggle.accordion-volumes size=\"sm\" class=\"mt-2\" v-if=\"coleta.selected && coleta.selected && coleta.selected.v>1\">\r\n                            Vols\r\n                            <b-badge variant=\"light\">\r\n                                {{ coleta.selected.v }}\r\n                            </b-badge>\r\n                        </b-button>\r\n                    </div>\r\n                </b-list-group-item>\r\n\r\n                <b-list-group-item variant=\"warning\" class=\"caixa\" v-if=\"coleta.selected && coleta.selected && coleta.selected.v>1\">\r\n                    <b-row>\r\n                        <b-col>\r\n                            <div class=\"row\" style=\"justify-content: space-evenly;\">\r\n                                <div>\r\n                                    Volume ( {{ coleta.selected.vol | charcode }} )\r\n                                </div>\r\n                                <div>\r\n                                    <b-badge :variant=\"(coleta.selected.qv==0) ? 'secondary' : 'info'\" class=\"mr-1\">\r\n                                        {{ coleta.selected.qv }}\r\n                                    </b-badge>\r\n                                    <b-badge variant=\"warning\" class=\"mr-1\">\r\n                                        {{ coleta.selected.t || 0}}\r\n                                    </b-badge>\r\n                                    <b-badge :variant=\"(coleta.selected.t==0) ? 'secondary' : 'danger'\">\r\n                                        {{ coleta.selected.t - coleta.selected.qv || 0 }}\r\n                                    </b-badge>\r\n                                </div>\r\n                            </div>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row>\r\n                        <b-col>\r\n                            <b-progress\r\n                                    :variant=\"(coleta.selected.qv==coleta.selected.t) ? 'success': 'info'\"\r\n                                    :value=\"coleta.selected.qv\"\r\n                                    :max=\"coleta.selected.t || coleta.selected.qv\"\r\n                                    show-progress\r\n                                    class=\"mt-1\">\r\n                                </b-progress>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-list-group-item>\r\n\r\n            </b-list-group>\r\n            <!-- FIM - Volume atual coletado  -->\r\n\r\n            <!-- Volumes coletados  -->\r\n            <div v-if=\"coleta.selected && coleta.selected.volumes.length>1\">\r\n                <b-collapse class=\"mt-2\" id=\"accordion-volumes\" accordion=\"accordion_volumes\" role=\"tabpanel\">\r\n\r\n                    <b-list-group v-if=\"coleta.selected\" class=\"mt-2 volumes\">\r\n                        <b-list-group-item v-for=\"(c,i) of coleta.selected.volumes\" :key=\"i\"\r\n                            variant=\"warning\">\r\n                            <b-row>\r\n                                <b-col>\r\n                                    Volume ( {{ c.vol | charcode }} )\r\n                                    <b-progress\r\n                                        :variant=\"(c.q==coleta.selected.t) ? 'success': 'info'\"\r\n                                        :value=\"c.q\"\r\n                                        :max=\"coleta.selected.t || c.q\"\r\n                                        show-progress\r\n                                        class=\"mt-1\">\r\n                                    </b-progress>\r\n                                </b-col>\r\n                                <b-col cols=\"4\">\r\n                                    <BadgeCounter :total=\"coleta.selected.t || 0\" :value=\"c.q\"/>\r\n                                </b-col>\r\n                            </b-row>\r\n                        </b-list-group-item>\r\n\r\n                    </b-list-group>\r\n                </b-collapse>\r\n            </div>\r\n            <!-- FIM - Volumes coletados  -->\r\n\r\n            <!-- Botões e input de busca do ean  -->\r\n            <div class=\"mt-2\">\r\n                <b-row>\r\n                    <b-col>\r\n                        <b-button block v-b-toggle.accordion-data variant=\"primary\" size=\"sm\" class=\"mr-2\">\r\n                            <b-icon-cart-check/>\r\n                            Produtos\r\n                            <b-badge variant=\"light\">\r\n                                {{ (coleta.data && coleta.data.length) || 0 }}\r\n                            </b-badge>                \r\n                        </b-button>\r\n                    </b-col>\r\n                    <b-col cols=\"5\">\r\n                        <b-button block variant=\"success\" size=\"sm\" @click=\"leitor = !leitor\">\r\n                            <b-icon-keyboard v-if=\"leitor\"/>\r\n                            <b-icon-upc-scan v-if=\"!leitor\"/>\r\n                            {{ leitor ? 'Digitar' : 'Escanear' }}\r\n                        </b-button>\r\n                    </b-col>\r\n                </b-row>\r\n            </div>\r\n            <!-- FIM - Botões e input de busca do ean  -->\r\n        \r\n            <!-- Lista de produtos a coletar -->\r\n            <b-collapse class=\"mt-2\" id=\"accordion-data\" size=\"sm\" accordion=\"accordion_data\" role=\"tabpanel\">\r\n\r\n                <b-table-simple size=\"sm\">\r\n                    <b-tr>\r\n                        <b-th variant=\"secondary\">Produto</b-th>\r\n                        <b-th variant=\"info\">Solicitado</b-th>\r\n                        <b-th variant=\"warning\">Coletado</b-th>\r\n                        <b-th variant=\"danger\" class=\"hom\">Faltam</b-th>\r\n                    </b-tr>\r\n\r\n                    <b-tr v-for=\"(e,i) of empenho\" :key=\"i\" :variant=\"(e.t==e.q) ? 'success' : ''\" @click=\"doselected(e,true)\">\r\n                        <b-td variant=\"secondary\">{{ e.display || e.ean13 }}</b-td>\r\n                        <b-td variant=\"info\">{{ e.t || 0 }}</b-td>\r\n                        <b-td variant=\"warning\">{{ e.q }}</b-td>\r\n                        <b-td variant=\"danger\" class=\"hom\">{{ (e.t || 0) - e.q }}</b-td>\r\n                    </b-tr>\r\n\r\n                    <b-tr>\r\n                        <b-th variant=\"secondary\">Total geral</b-th>\r\n                        <b-th variant=\"info\">{{ coleta.data.reduce((a,b) => a+parseInt(b.t),0) }}</b-th>\r\n                        <b-th variant=\"warning\">{{ coleta.data.reduce((a,b) => a+parseInt(b.q),0) }}</b-th>\r\n                        <b-th variant=\"danger\" class=\"hom\">{{ coleta.data.reduce((a,b) => a+parseInt(b.t)-parseInt(b.q),0) }}</b-th>\r\n                    </b-tr>\r\n\r\n                </b-table-simple>\r\n\r\n            </b-collapse>\r\n            <!-- FIM - Lista de produtos a coletar -->\r\n\r\n        </div>\r\n        <!-- FIM - Resumo das coletas  -->\r\n\r\n        <!-- JSON dos objetos -->\r\n        <div class=\"mt-2\">\r\n            <b-button block v-b-toggle.accordion-tech variant=\"warning\" class=\"mr-2\">\r\n                json objects             \r\n            </b-button>\r\n            <b-collapse class=\"mt-2\" id=\"accordion-tech\" size=\"sm\" accordion=\"accordion_tech\" role=\"tabpanel\">\r\n\r\n                <p>\r\n                    ean: {{ ean }}\r\n                </p>\r\n                <p>\r\n                    read: {{ read }}\r\n                </p>\r\n                <p>\r\n                    lastread: {{ lastread }}\r\n                </p>\r\n                <p>\r\n                    <b-button block v-b-toggle.accordion-empenho variant=\"secondary\" size=\"sm\" class=\"mr-2\">\r\n                        Empenho\r\n                    </b-button>\r\n                    <b-collapse class=\"mt-2\" id=\"accordion-empenho\" size=\"sm\" accordion=\"accordion_json\" role=\"tabpanel\">\r\n                        <pre>\r\n                            {{ empenho }}\r\n                        </pre>\r\n                    </b-collapse>\r\n                </p>\r\n                <p>\r\n                    <b-button block v-b-toggle.accordion-selected variant=\"secondary\" size=\"sm\" class=\"mr-2\">\r\n                        coleta.selected: \r\n                    </b-button>\r\n                    <b-collapse class=\"mt-2\" id=\"accordion-selected\" size=\"sm\" accordion=\"accordion_json\" role=\"tabpanel\">\r\n                        <pre>\r\n                            {{ coleta.selected }}\r\n                        </pre>\r\n                    </b-collapse>\r\n                </p>\r\n                <p>\r\n                    <b-button block v-b-toggle.accordion-coleta variant=\"secondary\" size=\"sm\" class=\"mr-2\">\r\n                        coleta.data: \r\n                    </b-button>\r\n                    <b-collapse class=\"mt-2\" id=\"accordion-coleta\" size=\"sm\" accordion=\"accordion_json\" role=\"tabpanel\">\r\n                        <pre>\r\n                            {{ coleta.data }}\r\n                        </pre>  \r\n                    </b-collapse>\r\n                </p>\r\n                <p>\r\n                    <b-button block v-b-toggle.accordion-eansLidos variant=\"secondary\" size=\"sm\" class=\"mr-2\">\r\n                        coleta.eansLidos: \r\n                    </b-button>\r\n                    <b-collapse class=\"mt-2\" id=\"accordion-eansLidos\" size=\"sm\" accordion=\"accordion_json\" role=\"tabpanel\">\r\n                        <pre>\r\n                            {{ coleta.eansLidos }}\r\n                        </pre>  \r\n                    </b-collapse>\r\n                </p>\r\n                <p>\r\n                    <b-button block v-b-toggle.accordion-totalvolumes variant=\"secondary\" size=\"sm\" class=\"mr-2\">\r\n                        totalvolumes: \r\n                    </b-button>\r\n                    <b-collapse class=\"mt-2\" id=\"accordion-totalvolumes\" size=\"sm\" accordion=\"accordion_json\" role=\"tabpanel\">\r\n                        <pre>\r\n                            {{ totalvolumes }}\r\n                        </pre>  \r\n                    </b-collapse>\r\n                </p>\r\n                \r\n            </b-collapse>\r\n        </div>\r\n        <!-- FIM - JSON dos objetos -->\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport BadgeCounter from '../components/BadgeCounter'\r\n\r\nexport default {\r\n\r\n    name: 'Coletor',\r\n\r\n    components: {\r\n\r\n        BadgeCounter\r\n\r\n    },\r\n\r\n    props: {\r\n        show: Boolean, // Mostra/Oculta a janela charcode\r\n        title: String, // Título da janela\r\n        ordernumber: {\r\n            type: Number,\r\n            default() { return 0 }\r\n        },\r\n        /*\r\n        data: \r\n            ean13: Ean 13 do produto\r\n            display: o que será mostrado na tela relacionado ao Ean\r\n            q: quantidade que será coletada ( informar 0)\r\n            t: quantidade de volumes do produto\r\n            volumes: array de volumes coletados\r\n            Ex:\r\n                para um volume informar { ean13: '7895155354473', display: 'UZ103-VM', q: 0, t: 4, volumes: [] }\r\n                para mais de um volume  { ean13: '7895155896652', display: '30105-105', q: 0, t: 2, v: 4, volumes: [{vol: 1, q: 0},{vol: 2, q: 0},{vol: 3, q: 0},{vol: 4, q: 0}] }\r\n\r\n                0107895155354473101008510001208\r\n                8006078951558966520104100963830653908\r\n                8006078951558966520204100963830653908\r\n                8006078951558966520304100963830653908\r\n                8006078951558966520404100963830653908\r\n\r\n        ean128: \r\n            field: campo a ser coletado após Ean\r\n            pos: posicao onde se encontra o campo\r\n            Ex:\r\n                [\r\n                    {fld: 'lote', t: 6}, posição de 0 à 6, número do lote\r\n                    {fld: 'seq', t: 5}, posição de 7 mais 5 posições, número da sequência\r\n                    {fld: 'emp', t: 2} posição de 13 mais 2 posições, número da empresa\r\n                ]\r\n\r\n        */\r\n        data: { // lista de eans para coleta\r\n            type: Array,\r\n            default() { return [] }\r\n        },\r\n        ean128: { // lista de campos após EAN128\r\n            type: Array,\r\n            default() { return [\r\n                        {fld: 'lote', t: 6}, // t=tamanho do campo\r\n                        {fld: 'seq', t: 5},\r\n                        {fld: 'emp', t: 2}\r\n                    ]\r\n                }\r\n            }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            ean: '',\r\n            read: '',\r\n            lastread: '',\r\n            showmodal: false,\r\n            leitor: true,\r\n            coleta: {\r\n                scan: '',\r\n                selected: null,\r\n                data: this.data,\r\n                eansLidos: [] // {orderId: 12345, data: [{ean128: '0107895155354473101008510001208', emp: 8, lote: 98452, seq: 19, vol: 4}]}                    \r\n            }\r\n        }\r\n    },\r\n\r\n    updated() {\r\n        if (!this.leitor) this.$refs.ean.focus()\r\n    },\r\n\r\n    computed: {\r\n\r\n        empenho() {\r\n            return this.data\r\n        },\r\n\r\n        totalvolumes() {\r\n            return {\r\n                    q: this.empenho.map(d=>d.volumes).map(a => a.reduce((a,b)=>a+parseInt(b.q),0)).reduce((a,b)=>a+b,0),\r\n                    t: this.empenho.reduce((a,b)=>a+parseInt(b.t)*parseInt(b.v || 1),0)\r\n                }\r\n        },\r\n\r\n        selectedvolumes() {\r\n            return {\r\n                    q: (!this.coleta.selected) ? 0 : this.coleta.selected.volumes.reduce((a,b)=>a+parseInt(b.q),0),\r\n                    t: (!this.coleta.selected) ? 0 : this.coleta.selected.t*(this.coleta.selected.v || 1)\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    watch: {\r\n\r\n        show(visible) {\r\n            if (visible) {\r\n                console.log('Add event listen')\r\n                this.coleta.data = this.data\r\n            } else {\r\n                console.log('Remove event listen')\r\n            }\r\n            this.listencoleta(visible)\r\n            this.showmodal = visible\r\n        },\r\n\r\n        leitor(sim) {\r\n            this.listencoleta(sim)\r\n        }\r\n\r\n    },\r\n    \r\n    methods: {\r\n\r\n        eanfocus() {\r\n            if (this.$refs.ean) this.$refs.ean.focus()\r\n            console.log('eanfocus:',this.$refs.ean)\r\n        },\r\n\r\n        listenkeydown(e) {\r\n            // console.log('addEventListener::keydown:hit', e)\r\n            if ((e.key > -1 && e.key < 10)) {\r\n                this.read += e.key\r\n                e.preventDefault()\r\n                // console.log('Read: ',this.read)\r\n            }\r\n            if (e.key == 'Backspace') {\r\n                this.read = this.read.substr(0,this.read.length-1)\r\n                this.lastread = this.read\r\n                e.preventDefault()\r\n            }\r\n            if (e.key == 'Delete') {\r\n                this.read = this.read.substr(1)\r\n                this.lastread = this.read\r\n                e.preventDefault()\r\n            }\r\n            /*\r\n            if ((e.key == 'Enter') && (this.read.length > 0)) {\r\n                this.onscan(this.read)\r\n            }\r\n            */\r\n           if (this.checkean128(this.read) == this.read.length) {\r\n               this.lastread = this.read\r\n               this.onscan(this.read)\r\n           }\r\n        },\r\n\r\n        listencoleta(sim) {\r\n            if (sim) {\r\n                console.log('Coletor.listencoleta:', 'sim')\r\n                window.addEventListener('keyup', this.listenkeydown)\r\n            } else {\r\n                console.log('Coletor.listencoleta:', 'não')\r\n                window.removeEventListener('keyup', this.listenkeydown)\r\n            }\r\n        },\r\n\r\n        InputHide(evt) {\r\n            evt.preventDefault()\r\n            console.log('Coletor::InputHide:hit')\r\n            console.log('Voce clicou em: ', evt.trigger)\r\n            console.log('data: ', this.coleta.data)\r\n            // this.$emit({option: this.choice, button: evt.trigger})\r\n        },\r\n\r\n        doselected(data, scroll) {\r\n            // if (scroll) this.$refs.ColetaModal.scrollTop = 0\r\n            let lean = this.coleta.data.find(e => e.ean13 == data.ean13)\r\n            \r\n            let qvol = lean.volumes.reduce((a,b) => a+parseInt(b.q) ,0)\r\n            let qcx1 = lean.volumes.find(c=>c.vol==1).q\r\n            let vol = {vol: 1, qv: qcx1, vt: qvol}\r\n\r\n            this.coleta.selected = {...lean, ...vol}\r\n\r\n        },\r\n\r\n        postean(data) {\r\n\r\n            // console.log('Coletor::postean: ', data)\r\n            // Ex:{ean128: ean, ean13: ean13, volume: volum, tvol: tvolu}\r\n\r\n            let lean = this.coleta.data.find(e => e.ean13 == data.ean13)\r\n            // console.log('Coletor::lean: ', lean)\r\n\r\n            if (!lean) {\r\n                this.coleta.data.push({ean13: data.ean13, q: 0, v: data.tvol, volumes: [{vol: 1, q: 0}]})\r\n                lean = this.coleta.data.find(e => e.ean13 == data.ean13)\r\n            }\r\n\r\n            //if (data.volume) {\r\n                if (lean.volumes.length==0) {\r\n                    let i\r\n                    for (i=1; i<=data.tvol; i++) {\r\n                        lean.volumes.push({vol: i, q: 0})\r\n                    }\r\n                } \r\n                \r\n                const lvol = lean.volumes.find(v => v.vol == data.volume)\r\n                if (lvol) lvol.q++\r\n                lean.q = Math.min(...lean.volumes.map(({q}) => q)) // conta a menor coleta\r\n\r\n/*             } else {\r\n                if (lean.q == undefined) lean.q = 0\r\n                lean.q++\r\n            } */\r\n            // posiciona o último ean lido\r\n            const cx = lean.volumes.filter(cx => cx.vol == data.volume)\r\n            let vol = {}\r\n            if (cx.length>0) {\r\n                let qvol = cx.reduce((a,b) => a+b.q ,0)\r\n                vol = {vol: (!data.volume) ? 1 : data.volume, qv: qvol, vt: lean.volumes.reduce((a,b) => a+parseInt(b.q) ,0)}\r\n            }\r\n            const eanLido = {ean128: data.ean128, emp: data.emp, lote: data.lote, seq: data.seq, vol: data.volume}\r\n\r\n            let coletas = lean.coletas\r\n            if (!coletas) coletas = []\r\n            coletas.push(eanLido)\r\n\r\n            // salva a coleta...\r\n            // TODO: não está salvando no coleta.data\r\n            if (!lean.volumescoletados) { // não existe cria ...\r\n              console.log('volumescoletados:não existe')\r\n                lean = {...lean, ...{volumescoletados: [data.ean128]}}\r\n            } else { // já existe adiciona\r\n              console.log('volumescoletados:existe')\r\n              if (!lean.volumescoletados.find(col => col === data.ean128)) {\r\n              console.log('volumescoletados:ean128 não existe')\r\n                lean.volumescoletados.push(data.ean128)\r\n              } else {\r\n                console.log('Coletor::postean: ', 'Etiqueta já coletada.')\r\n              }\r\n            }\r\n            \r\n            this.coleta.selected = {...lean, ...vol}\r\n\r\n        },\r\n\r\n        // verifica se o ean está completo para coletar\r\n        checkean128(e) {\r\n            let ret = 0\r\n            if (this.ean128) ret = this.ean128.reduce((a,b) => a+b.t, 0)\r\n            if (e.toString().length >= 18) {\r\n                if ((e.substr(0,3) == '010') && (e.substr(16,2) == '10')) {\r\n                    ret += 18 // ean volume único\r\n                } else {\r\n                    if ((e.substr(0,5) == '80060') && (e.substr(22,2) == '10')) { \r\n                        ret += 24 // ean volume multiplo\r\n                    } else {\r\n                        ret = -1\r\n                    }\r\n                }\r\n            } else {\r\n                ret = -1\r\n            }\r\n            console.log('Coletor::checkean128: ', ret)\r\n            console.log('Coletor::checkean128.ean128: ', this.ean128)\r\n            return ret\r\n        },\r\n\r\n        onscan(ean) {\r\n            if (ean.length < 0) return\r\n            // console.log('Coletor::onscan: ', ean)\r\n            // 0000000001111111111222222222233333333\r\n            // 1234567890123456789012345678901234567\r\n            //    |            | |     |    |\r\n            // 0107895155565916100782180065308\r\n            //\r\n            // 0000000001111111111222222222233333333\r\n            // 1234567890123456789012345678901234567\r\n            //      |            | | | |     |    |\r\n            // 8006078951558966520104100913540738708\r\n            // 8006078951558966520204100913540699808\r\n            // 8006078951558966520304100913540645808\r\n            // 8006078951558966520404100913540739408\r\n            let ean13 = null\r\n            let volum = null\r\n            let tvolu = null\r\n            let edata = null\r\n            let eemit = null\r\n            let eleng = this.checkean128(ean)\r\n            // tenta achar pelo padrão EAN 128\r\n\r\n            if (ean.length == eleng) {\r\n                if (eleng >= 22+this.ean128.reduce((a,b) => a+b.t, 0)) {  // EAN 128 mais de um volume\r\n                    edata = ean.substr(24, ean.length-24)\r\n                    ean13 = ean.substr(5,13)\r\n                    volum = parseInt(ean.substr(18,2))\r\n                    tvolu = parseInt(ean.substr(20,2))\r\n                } else {                                   // EAN 128 um volume\r\n                    edata = ean.substr(18, ean.length-18)\r\n                    ean13 = ean.substr(3,13)\r\n                    volum = 1\r\n                    tvolu = 1\r\n                }\r\n\r\n                eemit = {ean128: ean, ean13: ean13, volume: volum, tvol: tvolu}\r\n\r\n                if (this.ean128) { // se informou campos após o Ean\r\n                    // console.log('e: ', edata)\r\n                    let i = 0\r\n                    let aRead = null\r\n                    this.ean128.map(f => {\r\n                        let fld = {[f.fld]: parseInt(edata.substr(i, f.t))}\r\n                        i += f.t\r\n                        aRead = {...aRead, ...fld}\r\n                    })\r\n                    // console.log('aRead: ', aRead)\r\n                    eemit = {...eemit, ...aRead}\r\n                }\r\n\r\n                console.log('Coletor::scan: ', eemit)\r\n                const qtdeok = this.checkqtde(eemit)\r\n                const duplok = this.checkduplicidade(eemit)\r\n                if (qtdeok && duplok) {\r\n                    this.postean(eemit)\r\n                    this.$emit('onscan', eemit)\r\n                } else {\r\n                    if (!qtdeok) {\r\n                        this.$emit('error', 'Quantidade coletada inválida!')\r\n                        console.log('error', 'Quantidade coletada inválida!')\r\n                    } else {\r\n                        this.$emit('error', 'Etiqueta já coletada!')\r\n                        console.log('error', 'Etiqueta já coletada!')\r\n                    }\r\n                }\r\n                this.read = ''\r\n                this.ean = ''\r\n            }\r\n        },\r\n\r\n        // verifica quantidade atendida ...\r\n        checkqtde(ean) {\r\n            const oe = this.coleta.data.find(e => e.ean13 == ean.ean13)\r\n            let ret = true\r\n            if (oe) {\r\n                if (ean.volume) {\r\n                    const cx = oe.volumes.find(c => c.vol == ean.volume)\r\n                    if (cx) {\r\n                        ret = cx.q < (oe.t || cx.q +1)\r\n                    }\r\n                } else {\r\n                    ret = oe.q < (oe.t || oe.q +1)\r\n                }\r\n            }\r\n            return ret\r\n        },\r\n\r\n        // verifica ean já lido ...\r\n        checkduplicidade(ean) {\r\n\r\n            // salva os eans lidos para não reperir a mesm leitura ...\r\n            // primeiro pega o registro do pedido passado pelo orderid ...\r\n            let eansLidos = this.coleta.eansLidos.find(e => e.orderid == this.orderid) || []\r\n            if (eansLidos.length == 0) {\r\n                this.coleta.eansLidos.push({orderid: this.orderid, data: []})\r\n                eansLidos = this.coleta.eansLidos.find(e => e.orderid == this.orderid)\r\n            }\r\n            console.log('checkduplicidade.eanslidos:', JSON.stringify(eansLidos))\r\n            \r\n            // agora verifica se existe o eam128 já lido antes de adicionar novamente ...\r\n            const ret = eansLidos.data.find(e => e.ean128 == ean.ean128) ? false : true\r\n            if (ret) eansLidos.data.push({ean128: ean.ean128, emp: ean.emp, lote: ean.lote, seq: ean.seq, vol: ean.volume})\r\n\r\n            return ret\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .display {\r\n        font-size: 32px;\r\n        font-weight: bold;\r\n        padding: 20px;\r\n        background-color: black;\r\n        color: whitesmoke;\r\n    }\r\n    .label {\r\n        display: flow-root;\r\n        flex: auto;\r\n        margin-right: 25px;        \r\n    }\r\n    .caixa {\r\n        font-size: 24px;\r\n        font-weight: bold;\r\n    }\r\n    .volumes {\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n    }\r\n    .flex-b {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .scan {\r\n        font-size: 11px;\r\n        font-weight: bold;\r\n        border: 1px solid silver;\r\n        border-radius: 5px;\r\n        padding: 3px;\r\n        margin-bottom: 2px;\r\n        background-color: lightblue;\r\n    }\r\n    .displayflex {\r\n        display: flex;\r\n    }\r\n    .justaround {\r\n        justify-content: space-around;\r\n    }\r\n    .justcenter {\r\n        justify-content: center;\r\n    }\r\n    @media screen and (max-width: 700px) {\r\n        .display {\r\n            font-size: 24px;\r\n            padding: 10px;\r\n        }\r\n        .caixa {\r\n            font-size: 18px;\r\n        }\r\n        .volumes {\r\n            font-size: 14px;\r\n        }\r\n        .hom {\r\n            display: none;\r\n        }\r\n    }\r\n</style>"]}]}