{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\dashboard_maquina\\components\\DashNavBar.vue?vue&type=style&index=0&id=40822971&scoped=true&lang=css&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\dashboard_maquina\\components\\DashNavBar.vue","mtime":1670977910620},{"path":"C:\\k1-services\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670977934642},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1670977935796},{"path":"C:\\k1-services\\node_modules\\postcss-loader\\src\\index.js","mtime":1670977935130},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojYnRuTmF2IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBkaXNwbGF5OiBibG9jazsNCn0NCiNidG4gew0KICB3aWR0aDogMTUwcHg7DQogIGhlaWdodDogMzBweDsNCiAgbWFyZ2luOiA1cHg7DQogIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["DashNavBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DashNavBar.vue","sourceRoot":"src/pages/dashboard_maquina/components","sourcesContent":["<template >\r\n  <div>\r\n    <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\" id=\"btnNav\">\r\n      <b-navbar-nav class=\"ml-auto\">\r\n        <div>\r\n          <b-button\r\n            id=\"btn\"\r\n            @click=\"\r\n              btnMaq();\r\n              btnOkTimer();\r\n            \"\r\n            size=\"sm\"\r\n          >\r\n            Filtrar máquinas\r\n          </b-button>\r\n        </div>\r\n        <b-form-tags\r\n          id=\"tags-with-dropdown\"\r\n          v-model=\"value\"\r\n          no-outer-focus\r\n          class=\"mb-2\"\r\n        >\r\n          <template v-slot=\"{ tags, disabled, addTag, removeTag }\">\r\n            <ul v-if=\"tags.length > 0\" class=\"list-inline d-inline-block mb-2\">\r\n              <li v-for=\"tag in tags\" :key=\"tag\" class=\"list-inline-item\">\r\n                <b-form-tag\r\n                  @remove=\"removeTag(tag)\"\r\n                  :title=\"tag\"\r\n                  :disabled=\"disabled\"\r\n                  variant=\"info\"\r\n                  >{{ tag }}</b-form-tag\r\n                >\r\n              </li>\r\n            </ul>\r\n\r\n            <b-dropdown\r\n              size=\"sm\"\r\n              variant=\"outline-secondary\"\r\n              block\r\n              menu-class=\"w-100\"\r\n            >\r\n              <template #button-content>\r\n                <b-icon icon=\"tag-fill\"></b-icon> Escolha as máquinas\r\n              </template>\r\n              <b-dropdown-form @submit.stop.prevent=\"() => {}\">\r\n                <b-form-group\r\n                  label=\"Procurar Máquinas\"\r\n                  label-for=\"tag-search-input\"\r\n                  label-cols-md=\"auto\"\r\n                  class=\"mb-0\"\r\n                  label-size=\"sm\"\r\n                  :description=\"searchDesc\"\r\n                  :disabled=\"disabled\"\r\n                >\r\n                  <b-form-input\r\n                    v-model=\"search\"\r\n                    id=\"tag-search-input\"\r\n                    type=\"search\"\r\n                    size=\"sm\"\r\n                    autocomplete=\"off\"\r\n                  ></b-form-input>\r\n                </b-form-group>\r\n              </b-dropdown-form>\r\n              <b-dropdown-divider></b-dropdown-divider>\r\n              <b-dropdown-item-button\r\n                v-for=\"option in availableOptions\"\r\n                :key=\"option\"\r\n                @click=\"onOptionClick({ option, addTag })\"\r\n              >\r\n                {{ option }}\r\n              </b-dropdown-item-button>\r\n              <b-dropdown-text v-if=\"availableOptions.length === 0\">\r\n                Não há máquinas disponíveis para selecionar\r\n              </b-dropdown-text>\r\n            </b-dropdown>\r\n          </template>\r\n        </b-form-tags>\r\n        <div>\r\n          <b-button id=\"btn\" size=\"sm\" v-b-modal.modal-1>\r\n            Tempo: {{ numero }}\r\n          </b-button>\r\n        </div>\r\n      </b-navbar-nav>\r\n    </b-navbar>\r\n\r\n    <!-- Modais -->\r\n    <b-modal id=\"modal-1\" title=\"Opções!\" @ok=\"btnOkTimer\">\r\n      <div id=\"Modal\">\r\n        Atualizar tela a cada (minutos):\r\n        <b-form-input type=\"number\" v-model=\"timeReload\"></b-form-input>\r\n      </div>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    listMaq: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      search: \"\",\r\n      value: [],\r\n      timer: null,\r\n      timeReload: 5,\r\n\r\n      relogio: null,\r\n      numero: \"00:00\",\r\n      ss: 0,\r\n      mm: 0\r\n    };\r\n  },\r\n  computed: {\r\n    minutos() {\r\n      return this.timeReload * 1000 * 60;\r\n    },\r\n\r\n    criteria() {\r\n      // Compute the search criteria\r\n      return this.search.trim().toLowerCase();\r\n    },\r\n    availableOptions() {\r\n      const criteria = this.criteria;\r\n      // Filter out already selected options\r\n      const options = this.listMaq.filter(\r\n        opt => this.value.indexOf(opt) === -1\r\n      );\r\n      if (criteria) {\r\n        // Show only options that match criteria\r\n        return options.filter(opt => opt.toLowerCase().indexOf(criteria) > -1);\r\n      }\r\n      // Show all options available\r\n      return options;\r\n    },\r\n    searchDesc() {\r\n      if (this.criteria && this.availableOptions.length === 0) {\r\n        return \"Não há máquinas dispoíveis\";\r\n      }\r\n      return \"\";\r\n    }\r\n  },\r\n  methods: {\r\n    btnMaq() {\r\n      this.$emit(\"evtFiltrar\", this.value);\r\n    },\r\n\r\n    onOptionClick({ option, addTag }) {\r\n      addTag(option);\r\n      this.search = \"\";\r\n    },\r\n    btnOkTimer() {\r\n      clearInterval(this.timer);\r\n      clearInterval(this.relogio);\r\n      this.ss = 0;\r\n      this.mm = 0;\r\n\r\n      this.relogio = setInterval(() => {\r\n        this.rodaRelogio();\r\n      }, 1000); //1 segundo\r\n\r\n      if (this.timeReload > 0.9) {\r\n        console.log(\"Inciando timer!\", this.timeReload);\r\n        this.timer = setInterval(this.btnMaq, this.minutos);\r\n      } else {\r\n        this.$emit(\r\n          \"evtError\",\r\n          \"Necessário informar o intervalo de atualizações para obter um melhor funcionamento do programa!\"\r\n        );\r\n        clearInterval(this.relogio);\r\n        this.ss = 0;\r\n        this.mm = 0;\r\n      }\r\n    },\r\n    rodaRelogio() {\r\n      this.ss++;\r\n\r\n      if (this.ss == 60) {\r\n        //deu 59 segundos\r\n        this.mm++;\r\n        this.ss = 0;\r\n        if (this.mm >= this.timeReload) {\r\n          this.mm = 0;\r\n        }\r\n      }\r\n\r\n      let format =\r\n        (this.mm < 10 ? \"0\" + this.mm : this.mm) +\r\n        \":\" +\r\n        (this.ss < 10 ? \"0\" + this.ss : this.ss);\r\n\r\n      return (this.numero = format);\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#btnNav {\r\n  position: relative;\r\n  display: block;\r\n}\r\n#btn {\r\n  width: 150px;\r\n  height: 30px;\r\n  margin: 5px;\r\n  align-content: center;\r\n}\r\n</style>>\r\n    "]}]}