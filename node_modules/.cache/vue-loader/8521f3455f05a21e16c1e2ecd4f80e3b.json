{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\almoxarifado\\views\\lotes2.vue?vue&type=template&id=c2f4c348&scoped=true&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\almoxarifado\\views\\lotes2.vue","mtime":1670977910601},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670977935849},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}