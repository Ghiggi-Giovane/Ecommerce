{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\components\\MenuGallery.vue?vue&type=style&index=0&id=34f78d73&scoped=true&lang=css&","dependencies":[{"path":"C:\\k1-services\\src\\components\\MenuGallery.vue","mtime":1701906516406},{"path":"C:\\k1-services\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670977934642},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1674603024162},{"path":"C:\\k1-services\\node_modules\\postcss-loader\\src\\index.js","mtime":1670977935130},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouaGFuZCB7DQogIGN1cnNvcjogcG9pbnRlcjsNCn0NCi5zaGFkb3cgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNzIsIDgxLCA4Nik7DQogIG9wYWNpdHk6IDE7DQp9DQo="},{"version":3,"sources":["MenuGallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MenuGallery.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"container text-center mb-5 mt-5\">\r\n    <slot name=\"header\" />\r\n\r\n    <b-jumbotron\r\n      class=\"shadow text-white\"\r\n      v-show=\"show\"\r\n      @click=\"scrollMeTo('atalhos')\"\r\n    >\r\n      <template #header>\r\n        <b-icon :icon=\"menus.icon\"></b-icon>\r\n        {{ $t(menus.caption) }}\r\n      </template>\r\n\r\n      <template #lead>\r\n        <div v-if=\"menus.success\">\r\n          <p>{{ titulo }}</p>\r\n          <p>\r\n            {{ $t(text1) }}\r\n          </p>\r\n          <p>\r\n            {{ $t(text2) }}\r\n          </p>\r\n          <p>\r\n            {{ $t(text3) }}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            {{ menus.error }}\r\n          </p>\r\n        </div>\r\n      </template>\r\n\r\n      <hr class=\"my-4 bg-light\" />\r\n\r\n      <p v-if=\"menus.success\">\r\n        {{ $t(subtitle) }}\r\n      </p>\r\n      <p v-else>\r\n        Entre em contato com o administrador ou tente acessar mais tarde.\r\n      </p>\r\n    </b-jumbotron>\r\n\r\n    <div ref=\"atalhos\"></div>\r\n    <GridGallery :items=\"menus.submenus\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport GridGallery from \"./GridGallery\";\r\nexport default {\r\n  name: \"MenuGallery\",\r\n\r\n  props: {\r\n    show: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    menu: {\r\n      type: String,\r\n      require: true,\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    subtitle: {\r\n      type: String,\r\n      default:\r\n        \"Abaixo, seguem os links dos serviços disponíveis nesta plataforma.\",\r\n    },\r\n    text1: {\r\n      type: String,\r\n      default:\r\n        \"Aqui você encontrará diversas ferramentas e funcionalidades que irão ajudá-lo a administrar e realizar suas tarefas em nosso grupo.\",\r\n    },\r\n    text2: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    text3: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n\r\n  components: {\r\n    GridGallery,\r\n  },\r\n\r\n  beforeMount() {\r\n    // define a página inicial para do menu Home para o menu selecionado ...\r\n    const home = this.gtxMenusGallery(this.menu).menu.to;\r\n    this.acthome(home);\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"gtxMenusGallery\"]),\r\n\r\n    titulo() {\r\n      return this.title == \"\"\r\n        ? `${this.$root.$t(\"Bem vindo ao portal\")} ${this.$root.$t(\r\n            this.menus.caption\r\n          )}.`\r\n        : this.title;\r\n    },\r\n\r\n    menus() {\r\n      return {\r\n        success: this.gtxMenusGallery(this.menu).success,\r\n        error: this.gtxMenusGallery(this.menu).error,\r\n        to: this.gtxMenusGallery(this.menu).menu.to,\r\n        icon: this.gtxMenusGallery(this.menu).menu.icon,\r\n        caption: this.gtxMenusGallery(this.menu).menu.caption,\r\n        toparam: this.gtxMenusGallery(this.menu).toparam,\r\n        submenus: this.gtxMenusGallery(this.menu).submenus,\r\n      };\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"acthome\"]),\r\n    scrollMeTo(refName) {\r\n      let element = this.$refs[refName];\r\n      element.scrollIntoView({ behavior: \"smooth\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.hand {\r\n  cursor: pointer;\r\n}\r\n.shadow {\r\n  background-color: rgb(72, 81, 86);\r\n  opacity: 1;\r\n}\r\n</style>\r\n"]}]}