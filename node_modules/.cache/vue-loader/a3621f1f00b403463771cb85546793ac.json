{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\pages\\navbar\\components\\MainNav.vue?vue&type=template&id=6970fdc8&scoped=true&","dependencies":[{"path":"C:\\k1-services\\src\\pages\\navbar\\components\\MainNav.vue","mtime":1670977910650},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1670977935849},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1670977935327}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGItbmF2YmFyCiAgICB0b2dnbGVhYmxlPSJzbSIKICAgIHR5cGU9ImRhcmsiCiAgICB2YXJpYW50PSJkYW5nZXIiCiAgICBjbGFzcz0ic2hhZG93IgogICAgdi1pZj0iZ3R4bmF2YmFyIgogID4KICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXgiPgogICAgICA8Yi1uYXZiYXItYnJhbmQgaHJlZj0iIyIgdG89Ii9ob21lIgogICAgICAgID48aW1nCiAgICAgICAgICA6c3JjPSJsb2dvSzEiCiAgICAgICAgICAgdi1iLXRvb2x0aXAuaG92ZXIgdGl0bGU9IkhvbWUgc2l0ZSIKICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMjRweDsiCiAgICAgIC8+PC9iLW5hdmJhci1icmFuZD4KICAgICAgPGItbmF2YmFyLW5hdiB2LWlmPSJndHhsb2dpbkF1dGgiPgogICAgICAgIDxiLW5hdi1pdGVtIHYtYi10b2dnbGUuc2lkZW1lbnUgIHYtYi10b29sdGlwLmhvdmVyIHRpdGxlPSJNZW51IGxhdGVyYWwiPgogICAgICAgICAgPCEtLSA8Yi1pY29uLWxheW91dC1zaWRlYmFyLWluc2V0Lz4gLS0+CiAgICAgICAgICA8Yi1pY29uLW1lbnUtYXBwIC8+CiAgICAgICAgPC9iLW5hdi1pdGVtPgogICAgICA8L2ItbmF2YmFyLW5hdj4KICAgIDwvZGl2PgoKICAgIDxiLW5hdmJhci1uYXY+CiAgICAgIDxiLW5hdi1pdGVtIGFsaWduPSJzdGFydCIgaHJlZj0iIyIgOnRvPSJndHhob21lIiB2LWItdG9vbHRpcC5ob3ZlciB0aXRsZT0iSG9tZSBwYWdlIj4KICAgICAgICA8Yi1pY29uIGljb249ImhvdXNlLWZpbGwiIC8+CiAgICAgIDwvYi1uYXYtaXRlbT4KICAgIDwvYi1uYXZiYXItbmF2PgoKICAgIDxiLW5hdmJhci10b2dnbGUgdGFyZ2V0PSJuYXYtY29sbGFwc2UiPjwvYi1uYXZiYXItdG9nZ2xlPgoKICAgIDxiLWNvbGxhcHNlIGlkPSJuYXYtY29sbGFwc2UiIGlzLW5hdj4KICAgICAgPGItbmF2YmFyLW5hdj4KICAgICAgICA8Yi1uYXYtaXRlbQogICAgICAgICAgYWxpZ249InN0YXJ0IgogICAgICAgICAgaHJlZj0iIyIKICAgICAgICAgIHYtYi10b29sdGlwLmhvdmVyIDp0aXRsZT0iJHQobWVudS5jYXB0aW9uLnRvTG9jYWxlTG93ZXJDYXNlKCkpIHwgcHJvcGVyIgogICAgICAgICAgdi1mb3I9IihtZW51LCBpbmRleCkgb2YgZ3R4bWVudXMiCiAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgIDp0bz0ibWVudS50byIKICAgICAgICAgID48Yi1pY29uIDppY29uPSJtZW51Lmljb24iIC8+CiAgICAgICAgICB7eyAkdChtZW51LmNhcHRpb24udG9Mb2NhbGVMb3dlckNhc2UoKSkgfCBjYXBpdGFsaXplIH19PC9iLW5hdi1pdGVtCiAgICAgICAgPgogICAgICAgIDwhLS0gPGItbmF2LWl0ZW0gYWxpZ249InN0YXJ0IiBocmVmPSIjIiB0bz0iL3Rlc3RlcyI+PGItaWNvbiBpY29uPSJjb2x1bW5zLWdhcCIvPlRlc3RlczwvYi1uYXYtaXRlbT4KICAgICAgICAgICAgICA8Yi1uYXYtaXRlbSB2LWlmPSJndHhTeXN0ZW1FcnJvckxvZyIgYWxpZ249InN0YXJ0IiBocmVmPSIjIiB0bz0iL2Vycm9yIj48Yi1pY29uIGljb249ImJ1ZyIvPkVycm9yPC9iLW5hdi1pdGVtPiAtLT4KICAgICAgPC9iLW5hdmJhci1uYXY+CgogICAgICA8IS0tIFJpZ2h0IGFsaWduZWQgbmF2IGl0ZW1zIC0tPgogICAgICA8Yi1uYXZiYXItbmF2IGNsYXNzPSJtbC1hdXRvIj4KICAgICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biByaWdodCB2LWlmPSJzeXNkZXZtb2RlIiB2LWItdG9vbHRpcC5ob3ZlciB0aXRsZT0iRGV2ZWxvcG1lbnQgTW9kZSI+CiAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmJ1dHRvbi1jb250ZW50IHRvPSIvYWRtaW5kYXNoYm9hcmQiPgogICAgICAgICAgICA8Yi1pY29uLWdlYXIgLz4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIDp0bz0iJy9hZG1pbmRhc2hib2FyZCciPgogICAgICAgICAgICA8Yi1pY29uLXRvb2xzIC8+CiAgICAgICAgICAgIEFkbWluaXN0cmFkb3IKICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgPGItZHJvcGRvd24taXRlbQogICAgICAgICAgICBocmVmPSIjIgogICAgICAgICAgICB0aXRsZT0iRGV2ZWxvcG1lbnQgTW9kZSIKICAgICAgICAgICAgdi1iLW1vZGFsLm1vZGFsLW5hdi12dWV4aW5zcGVjdG9yCiAgICAgICAgICA+CiAgICAgICAgICAgIDxiLWljb24tYnJhY2VzIC8+CiAgICAgICAgICAgIFZ1ZXggSW5zcGVjdG9yCiAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gaHJlZj0iIyIgdGl0bGU9Ik9mZiBMaW5lIiB0bz0iL29mZmxpbmUiPgogICAgICAgICAgICA8Yi1pY29uLXdpZmktb2ZmIC8+CiAgICAgICAgICAgIE9mZiBMaW5lCiAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gaHJlZj0iIyIgdGl0bGU9Ikljb25lcyIgdG89Ii9pY29ucyI+CiAgICAgICAgICAgIDxiLWljb24tcHV6emxlIC8+CiAgICAgICAgICAgIMONY29uZXMKICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgIDwvYi1uYXYtaXRlbS1kcm9wZG93bj4KCiAgICAgICAgPCEtLQogICAgICAgIDxiLW5hdi1pdGVtCiAgICAgICAgICBocmVmPSIjIgogICAgICAgICAgOnRvPSInL2NoYXQnIgogICAgICAgICAgdi1iLXRvb2x0aXAuaG92ZXIgdGl0bGU9IkNoYXQiCiAgICAgICAgICB2LWlmPSJndHhjaGF0U2hvdyhndHhBdXRoVXNlcikgJiYgc3lzZGV2bW9kZSIKICAgICAgICA+CiAgICAgICAgICA8Yi1pY29uLWNoYXQtZG90cyAvPgogICAgICAgICAgPGItYmFkZ2UKICAgICAgICAgICAgdi1pZj0iZ3R4Y2hhdE1lc3NhZ2VzVW5yZWFkKGd0eEF1dGhVc2VyKSA+IDAiCiAgICAgICAgICAgIHZhcmlhbnQ9ImxpZ2h0IgogICAgICAgICAgICBjbGFzcz0ibWwtMSBmbG9hdC1zbS1yaWdodCBzaGFrZV9tZSIKICAgICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTBweDsiCiAgICAgICAgICA+CiAgICAgICAgICAgIHt7IGd0eGNoYXRNZXNzYWdlc1VucmVhZChndHhBdXRoVXNlcikgfX0KICAgICAgICAgIDwvYi1iYWRnZT4KICAgICAgICA8L2ItbmF2LWl0ZW0+CiAgICAgICAgLS0+CgogICAgICAgIDxiLW5hdi1pdGVtLWRyb3Bkb3duIHJpZ2h0IHYtYi10b29sdGlwLmhvdmVyIHRpdGxlPSJQZXNxdWlzYXIiPgogICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpidXR0b24tY29udGVudD4KICAgICAgICAgICAgPGItaWNvbi1zZWFyY2ggLz4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8Yi1kcm9wZG93bi1mb3JtIGNsYXNzPSJzZWFyY2hiYXIiPgogICAgICAgICAgICA8Yi1pbnB1dC1ncm91cCBibG9jaz4KICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICBzaXplPSJzbSIKICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlcj0iJHQoJ3Blc3F1aXNhcicpIHwgY2FwaXRhbGl6ZSIKICAgICAgICAgICAgICAgIHYtbW9kZWw9ImlucHV0UGVzcXVpc2EiCiAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0PgogICAgICAgICAgICAgIDxiLWlucHV0LWdyb3VwLWFwcGVuZD4KICAgICAgICAgICAgICAgIDxiLWJ1dHRvbgogICAgICAgICAgICAgICAgICBzaXplPSJzbSIKICAgICAgICAgICAgICAgICAgdmFyaWFudD0ib3V0bGluZS1zdWNjZXNzIgogICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iaW5wdXRQZXNxdWlzYS5sZW5ndGggPT0gMCIKICAgICAgICAgICAgICAgICAgQGNsaWNrPSJzZWFyY2hjbGljayIKICAgICAgICAgICAgICAgICAgPjxiLWljb24tc2VhcmNoCiAgICAgICAgICAgICAgICAvPjwvYi1idXR0b24+CiAgICAgICAgICAgICAgPC9iLWlucHV0LWdyb3VwLWFwcGVuZD4KICAgICAgICAgICAgPC9iLWlucHV0LWdyb3VwPgogICAgICAgICAgPC9iLWRyb3Bkb3duLWZvcm0+CiAgICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPgoKICAgICAgICA8Yi1uYXZiYXItbmF2IHYtaWY9ImJhZGdlcnJvcyA+IDAiPgogICAgICAgICAgPGItbmF2LWl0ZW0gaHJlZj0iIyIgOnRvPSInL2Vycm9yJyIgdi1iLXRvb2x0aXAuaG92ZXIgdGl0bGU9IkVycm9zIj4KICAgICAgICAgICAgPGItaWNvbi1idWcgLz4KICAgICAgICAgICAgPGItYmFkZ2UKICAgICAgICAgICAgICB2YXJpYW50PSJsaWdodCIKICAgICAgICAgICAgICBjbGFzcz0iZmxvYXQtc20tcmlnaHQiCiAgICAgICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTBweDsiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICB7eyBiYWRnZXJyb3MgfX0KICAgICAgICAgICAgPC9iLWJhZGdlPgogICAgICAgICAgPC9iLW5hdi1pdGVtPgogICAgICAgIDwvYi1uYXZiYXItbmF2PgoKICAgICAgICA8Yi1uYXZiYXItbmF2PgogICAgICAgICAgPGItbmF2LWl0ZW0gaHJlZj0iIyIgOnRvPSInL3JhbWFpcyciIHYtYi10b29sdGlwLmhvdmVyIHRpdGxlPSJSYW1haXMiPgogICAgICAgICAgICA8Yi1pY29uLXRlbGVwaG9uZSAvPgogICAgICAgICAgPC9iLW5hdi1pdGVtPgogICAgICAgIDwvYi1uYXZiYXItbmF2PgoKICAgICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biByaWdodCBuby1jYXJldCB2LWItdG9vbHRpcC5ob3ZlciB0aXRsZT0iSWRpb21hcyI+CiAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmJ1dHRvbi1jb250ZW50PgogICAgICAgICAgICA8Yi1pY29uLWdsb2JlMiAvPgogICAgICAgICAgICA8Yi1iYWRnZQogICAgICAgICAgICAgIHZhcmlhbnQ9Im91dGxpbmUtbGlnaHQiCiAgICAgICAgICAgICAgY2xhc3M9ImZsb2F0LXJpZ2h0IgogICAgICAgICAgICAgIHYtaWY9Imd0eGlkaW9tYXNzZWxlY3RlZCIKICAgICAgICAgICAgICA+e3sgZ3R4aWRpb21hc3NlbGVjdGVkLmxhbmcgfX08L2ItYmFkZ2UKICAgICAgICAgICAgPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0KICAgICAgICAgICAgaHJlZj0iIyIKICAgICAgICAgICAgdi1mb3I9IihpZGlvbWEsIGluZGV4KSBvZiBndHhpZGlvbWFzIgogICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgQGNsaWNrPSJzZWxpZGlvbWEoaWRpb21hKSIKICAgICAgICAgID4KICAgICAgICAgICAgPGItaWNvbi10b2dnbGUtb24KICAgICAgICAgICAgICB2YXJpYW50PSJzdWNjZXNzIgogICAgICAgICAgICAgIHYtaWY9ImlkaW9tYS5sYW5nID09IGd0eGlkaW9tYXNzZWxlY3RlZC5sYW5nIgogICAgICAgICAgICAvPgogICAgICAgICAgICA8Yi1pY29uLXRvZ2dsZS1vZmYgdmFyaWFudD0iaW5mbyIgdi1lbHNlIC8+CiAgICAgICAgICAgIHt7IGlkaW9tYS5jYXB0aW9uIH19ICh7eyBpZGlvbWEubGFuZyB9fSkKICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgIDwvYi1uYXYtaXRlbS1kcm9wZG93bj4KCiAgICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gcmlnaHQgbm8tY2FyZXQgdi1zaG93PSJndHhsb2dpbkF1dGgiIGxhenkgdi1iLXRvb2x0aXAuaG92ZXIgdGl0bGU9IkVtcHJlc2FzIj4KICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICAgIDxiLWljb24tYnVpbGRpbmcgLz4KICAgICAgICAgICAgPGItYmFkZ2UgdmFyaWFudD0ib3V0bGluZS1saWdodCIgY2xhc3M9ImZsb2F0LXJpZ2h0Ij57ewogICAgICAgICAgICAgIGd0eENvbmZpZ1BhcmVtcAogICAgICAgICAgICB9fTwvYi1iYWRnZT4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtCiAgICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICAgIHYtZm9yPSIocGFyZW1wLCBpbmRleCkgb2YgZ3R4UGFyZW1wRGF0YSIKICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgIEBjbGljaz0ic2VscGFyZW1wKHBhcmVtcCkiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxiLWljb24tdG9nZ2xlLW9uCiAgICAgICAgICAgICAgdmFyaWFudD0ic3VjY2VzcyIKICAgICAgICAgICAgICB2LWlmPSJwYXJlbXAudmFsdWUgPT0gZ3R4Q29uZmlnUGFyZW1wIgogICAgICAgICAgICAvPgogICAgICAgICAgICA8Yi1pY29uLXRvZ2dsZS1vZmYgdmFyaWFudD0iaW5mbyIgdi1lbHNlIC8+CiAgICAgICAgICAgIHt7IHBhcmVtcC50ZXh0IHwgcHJvcGVyIH19CiAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8L2ItbmF2LWl0ZW0tZHJvcGRvd24+CgogICAgICAgIDxiLW5hdi1pdGVtLWRyb3Bkb3duCiAgICAgICAgICByaWdodAogICAgICAgICAgbm8tY2FyZXQKICAgICAgICAgIHYtYi10b29sdGlwLmhvdmVyIHRpdGxlPSJBdXRlbnRpY2HDp8OjbyIKICAgICAgICAgIHYtc2hvdz0iIWd0eGxvZ2luQXV0aCIKICAgICAgICAgIEBzaG93bj0ib25Mb2dpbkRyb3BEb3duKCkiCiAgICAgICAgPgogICAgICAgICAgPCEtLSBVc2luZyAnYnV0dG9uLWNvbnRlbnQnIHNsb3QgLS0+CiAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICA8Yi1pY29uLXBlcnNvbi14IC8+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPGItZHJvcGRvd24taXRlbSBocmVmPSIjIiB0bz0iL2xvZ2luIj4KICAgICAgICAgICAgTG9naW4KICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlciAvPgoKICAgICAgICAgIDxiLWRyb3Bkb3duLWZvcm0gc3R5bGU9IndpZHRoOiAyNTBweDsiPgogICAgICAgICAgICA8TG9naW4gcmVmPSJMb2dpblJlZiIgLz4KICAgICAgICAgIDwvYi1kcm9wZG93bi1mb3JtPgogICAgICAgIDwvYi1uYXYtaXRlbS1kcm9wZG93bj4KCiAgICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gcmlnaHQgbm8tY2FyZXQgdi1zaG93PSJndHhsb2dpbkF1dGgiPgogICAgICAgICAgPCEtLSBVc2luZyAnYnV0dG9uLWNvbnRlbnQnIHNsb3QgLS0+CiAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICA8Yi1pY29uLXBlcnNvbi1jaGVjay1maWxsIC8+CiAgICAgICAgICA8L3RlbXBsYXRlPgoKICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gaHJlZj0iIyIgdi1iLW1vZGFsLm1vZGFsLXByb2ZpbGVyPgogICAgICAgICAgICA8Yi1pY29uLXBlcnNvbi1iYWRnZSAvPgogICAgICAgICAgICB7eyBndHhBdXRoUHJvZmlsZWRpc3BsYXlOYW1lIH19CiAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gaHJlZj0iIyIgdi1iLW1vZGFsLm1vZGFsLWNvbmZpZz4KICAgICAgICAgICAgPGItaWNvbi10b29scyAvPgogICAgICAgICAgICBDb25maWd1cmHDp8O1ZXMKICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlciAvPgogICAgICAgICAgPGItZHJvcGRvd24taXRlbSB2YXJpYW50PSJkYW5nZXIiIGhyZWY9IiMiIEBjbGljaz0ibG9nb3V0Ij4KICAgICAgICAgICAgPGItaWNvbi1wb3dlciAvPgogICAgICAgICAgICBTYWlyCiAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8L2ItbmF2LWl0ZW0tZHJvcGRvd24+CiAgICAgIDwvYi1uYXZiYXItbmF2PgogICAgPC9iLWNvbGxhcHNlPgogIDwvYi1uYXZiYXI+CgogIDwhLS0KICAgICAgZ3R4Q29uZmlnUGFyZW1wOiB7e2d0eENvbmZpZ1BhcmVtcH19PGJyLz4KICAgICAgZ3R4Q29uZmlnQWxtb3g6IHt7Z3R4Q29uZmlnQWxtb3h9fTxici8+CiAgICAgIGd0eFBhcmVtcFNlbGVjdGVkOiB7e2d0eFBhcmVtcFNlbGVjdGVkfX0KICAgICAgZ3R4UGFyZW1wRGF0YToge3tndHhQYXJlbXBEYXRhfX0KICAgICAgLS0+CgogIDxiLW1vZGFsIGlkPSJtb2RhbC1wcm9maWxlciIgdGl0bGU9Ik1ldSBjYWRhc3RybyIgaGlkZS1mb290ZXI+CiAgICA8UHJvZmlsZXIgLz4KICA8L2ItbW9kYWw+CgogIDxiLW1vZGFsIGlkPSJtb2RhbC1jb25maWciIDp0aXRsZT0iJHQoJ2NvbmZpZ3VyYcOnw7VlcycpIHwgcHJvcGVyIj4gPC9iLW1vZGFsPgoKICA8Yi1tb2RhbAogICAgaWQ9Im1vZGFsLW5hdi12dWV4aW5zcGVjdG9yIgogICAgdGl0bGU9IlZ1ZXggSW5zcGVjdG9yIgogICAgc2l6ZT0ieGwiCiAgICBzY3JvbGxhYmxlCiAgICBoaWRlLWZvb3RlcgogICAgQHNob3duPSIkcmVmcy52dWV4aW5zcGVjdG9yLmRvSW5wdXRGb2N1cygpIgogID4KICAgIDxWdWV4SW5zcGVjdCByZWY9InZ1ZXhpbnNwZWN0b3IiIC8+CiAgPC9iLW1vZGFsPgo8L2Rpdj4K"},null]}