{"remainingRequest":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\k1-services\\src\\components\\ExportFile.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\k1-services\\src\\components\\ExportFile.vue","mtime":1701906516400},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\babel-loader\\lib\\index.js","mtime":1670977935138},{"path":"C:\\k1-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670977934221},{"path":"C:\\k1-services\\node_modules\\vue-loader\\lib\\index.js","mtime":1674603023821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ExportFile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA","file":"ExportFile.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <b-form-group\r\n      id=\"input-group-templates\"\r\n      label-for=\"input-Templateses\"\r\n      label=\"Modelos\"\r\n    >\r\n      <b-input-group>\r\n        <b-form-select v-model=\"templateselected\" :options=\"templatesoptions\">\r\n        </b-form-select>\r\n        <b-input-group-append>\r\n          <b-button\r\n            variant=\"info\"\r\n            :disabled=\"!templateselected || templateselected == ''\"\r\n            @click=\"salvar\"\r\n          >\r\n            <b-icon-file-earmark-check />\r\n            Salvar\r\n          </b-button>\r\n        </b-input-group-append>\r\n      </b-input-group>\r\n    </b-form-group>\r\n    <b-form-group\r\n      id=\"input-group-fields\"\r\n      label-for=\"input-fields\"\r\n      label=\"Colunas\"\r\n    >\r\n      <b-form-tags\r\n        id=\"input-fields\"\r\n        add-button-text=\"Incluir\"\r\n        add-button-variant=\"outline-primary\"\r\n        placeholder=\"Adicione as colunas\"\r\n        add-on-change\r\n        no-outer-focus\r\n        v-model=\"fld\"\r\n      >\r\n        <template\r\n          v-slot=\"{ tags, inputAttrs, inputHandlers, disabled, removeTag }\"\r\n        >\r\n          <ul v-if=\"tags.length > 0\" class=\"list-inline d-inline-block mb-2\">\r\n            <li v-for=\"tag in tags\" :key=\"tag\" class=\"list-inline-item\">\r\n              <b-form-tag\r\n                @remove=\"removeTag(tag)\"\r\n                :title=\"tag\"\r\n                :disabled=\"disabled\"\r\n                variant=\"info\"\r\n                >{{ tag }}</b-form-tag\r\n              >\r\n            </li>\r\n          </ul>\r\n          <b-form-select\r\n            v-bind=\"inputAttrs\"\r\n            v-on=\"inputHandlers\"\r\n            :disabled=\"disabled || availableOptions.length === 0\"\r\n            :options=\"fields\"\r\n          >\r\n            <template #first>\r\n              <!-- This is required to prevent bugs with Safari -->\r\n              <option disabled value=\"\"\r\n                >Selecione as colunas a serem exportadas</option\r\n              >\r\n            </template>\r\n          </b-form-select>\r\n        </template>\r\n      </b-form-tags>\r\n    </b-form-group>\r\n\r\n    <b-row>\r\n      <b-col>\r\n        <b-form-group\r\n          id=\"input-group-filename\"\r\n          label-for=\"input-filename\"\r\n          label=\"Nome Arquivo\"\r\n        >\r\n          <b-form-input id=\"input-filename\" v-model=\"filename\"> </b-form-input>\r\n        </b-form-group>\r\n      </b-col>\r\n      <b-col cols=\"2\">\r\n        <b-form-group\r\n          id=\"input-group-separador\"\r\n          label-for=\"input-separador\"\r\n          label=\"Separador\"\r\n        >\r\n          <b-form-select\r\n            id=\"input-separador\"\r\n            :options=\"separators\"\r\n            v-model=\"sep\"\r\n          >\r\n          </b-form-select>\r\n        </b-form-group>\r\n      </b-col>\r\n      <b-col cols=\"2\">\r\n        <b-form-group\r\n          id=\"input-group-quoted\"\r\n          label-for=\"input-quoted\"\r\n          label=\"Formatador\"\r\n        >\r\n          <b-form-input id=\"input-quoted\" v-model=\"quoted\"> </b-form-input>\r\n        </b-form-group>\r\n      </b-col>\r\n      <b-col cols=\"2\">\r\n        <b-form-group\r\n          id=\"input-group-head\"\r\n          label-for=\"input-head\"\r\n          label=\"Cabeçalho\"\r\n        >\r\n          <b-form-checkbox id=\"input-head\" v-model=\"whead\">{{\r\n            lcabecalho\r\n          }}</b-form-checkbox>\r\n        </b-form-group>\r\n      </b-col>\r\n    </b-row>\r\n    <b-form-group\r\n      id=\"input-group-csvstream\"\r\n      label-for=\"input-csvstream\"\r\n      label=\"Exemplo\"\r\n    >\r\n      <b-form-textarea\r\n        id=\"input-csvstream\"\r\n        :value=\"csvsample\"\r\n        disabled\r\n        debounce=\"1000\"\r\n        wrap=\"off\"\r\n        rows=\"5\"\r\n        style=\"font-family: revert;font-size:10px;font-weight:bold;\"\r\n      ></b-form-textarea>\r\n    </b-form-group>\r\n    <hr />\r\n    <span class=\"spaced\">\r\n      <b-button\r\n        :disabled=\"csvstream == ''\"\r\n        variant=\"primary\"\r\n        class=\"float-right\"\r\n        @click=\"download\"\r\n      >\r\n        <b-icon-download />\r\n        Baixar\r\n      </b-button>\r\n    </span>\r\n    <!-- MODALS -->\r\n    <b-modal\r\n      id=\"modal-template\"\r\n      ref=\"modal-template\"\r\n      title=\"Salvar modelo\"\r\n      ok-only\r\n      ok-title=\"Salvar\"\r\n      :ok-disabled=\"templatename == ''\"\r\n      @ok=\"savetemplate\"\r\n    >\r\n      <b-form-group\r\n        id=\"input-group-nome\"\r\n        label-for=\"input-nome\"\r\n        label=\"Nome do modelo\"\r\n      >\r\n        <b-form-input id=\"input-nome\" v-model=\"templatename\"> </b-form-input>\r\n      </b-form-group>\r\n    </b-modal>\r\n    <!-- <pre>\r\n      templatesoptions:\r\n      {{ templatesoptions }}\r\n    </pre>\r\n    <pre>\r\n      templates:\r\n      {{ templates }}\r\n    </pre>\r\n    <pre>\r\n      templateselected:\r\n      {{ templateselected }}\r\n    </pre>\r\n    -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ExportFile\",\r\n\r\n  data() {\r\n    return {\r\n      templates: [],\r\n      templatename: \"\",\r\n      templateselected: null,\r\n      addfld: \"\",\r\n      sep: this.value.sep,\r\n      fld: this.value.fld,\r\n      quoted: this.value.quoted,\r\n      whead: this.value.whead,\r\n      csvstream: this.value.csvstream,\r\n      filename: this.value.filename,\r\n      data: this.value.data,\r\n    };\r\n  },\r\n\r\n  props: {\r\n    value: {\r\n      type: Object,\r\n      default: {\r\n        sep: \";\",\r\n        fld: null,\r\n        quoted: \"\",\r\n        whead: false,\r\n        filename: \"data.dat\",\r\n        csvstream: \"\",\r\n        data: [],\r\n      },\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    lcabecalho() {\r\n      return this.whead ? \"Visível\" : \"Oculto\";\r\n    },\r\n    fields() {\r\n      return Object.keys(this.data[0]).filter(\r\n        (f) => this.fld.indexOf(f) === -1\r\n      );\r\n    },\r\n    availableOptions() {\r\n      return this.fields.filter((opt) => this.fld.indexOf(opt) === -1);\r\n    },\r\n    separators() {\r\n      return [\"\", \",\", \";\", \"|\"];\r\n    },\r\n    emitmodal() {\r\n      return {\r\n        sep: this.sep,\r\n        fld: this.fld,\r\n        quoted: this.quoted,\r\n        whead: this.whead,\r\n        filename: this.filename,\r\n        data: this.data,\r\n      };\r\n    },\r\n    templatemodel() {\r\n      return {\r\n        sep: this.sep,\r\n        fld: this.fld,\r\n        quoted: this.quoted,\r\n        whead: this.whead,\r\n      };\r\n    },\r\n    templatesoptions() {\r\n      const template =\r\n        this.templates.length > 0\r\n          ? this.templates.map((m) => ({ value: m.nome, text: m.nome }))\r\n          : [];\r\n      template.unshift({ value: \"new template\", text: \"Novo Modelo\" });\r\n      return template;\r\n    },\r\n    csvsample() {\r\n      return this.data.length > 0\r\n        ? this.json2csv(\r\n            this.data.filter((f, i) => i < 5),\r\n            this.fld,\r\n            this.sep,\r\n            this.quoted,\r\n            this.whead\r\n          )\r\n        : \"\";\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    emitmodal: {\r\n      deep: true,\r\n      handler(data) {\r\n        this.exporta(data);\r\n      },\r\n    },\r\n    templateselected(nome) {\r\n      const template = this.templates.find((f) => f.nome == nome);\r\n      if (template) {\r\n        this.fld = template.fld;\r\n        this.sep = template.sep;\r\n        this.quoted = template.quoted;\r\n        this.whead = template.whead;\r\n        this.templatename = nome;\r\n      }\r\n    },\r\n  },\r\n\r\n  beforeMount() {\r\n    let templates = localStorage.getItem(\"templatesexport\");\r\n    if (templates && templates !== \"\") {\r\n      this.templates = JSON.parse(templates).filter((f) => f);\r\n    }\r\n\r\n    this.updatecsv();\r\n  },\r\n\r\n  methods: {\r\n    updatecsv() {\r\n      this.csvstream = this.json2csv(\r\n        this.data,\r\n        this.fld,\r\n        this.sep,\r\n        this.quoted,\r\n        this.whead\r\n      );\r\n    },\r\n    exporta(data) {\r\n      this.updatecsv();\r\n      const emitdata = { ...data, ...{ csvstream: this.csvstream } };\r\n      this.$emit(\"input\", emitdata);\r\n    },\r\n    download() {\r\n      this.downloadString(this.csvstream, this.filename);\r\n    },\r\n    json2csv(obj, fld = null, sep = \";\", quoted = \"\", whead = true) {\r\n      const replacer = (key, value) => (value === null ? \"\" : value); // specify how you want to handle null values here\r\n      let header = Object.keys(obj[0]);\r\n      if (Array.isArray(fld) && fld.length > 0) {\r\n        header = fld;\r\n      }\r\n      let csv = [\r\n        ...obj.map(\r\n          (row) =>\r\n            header\r\n              .map(\r\n                (fieldName) =>\r\n                  quoted +\r\n                  JSON.stringify(row[fieldName], replacer).replaceAll('\"', \"\") +\r\n                  quoted\r\n              )\r\n              .join(sep) + sep\r\n        ),\r\n      ].join(\"\\r\\n\");\r\n\r\n      if (whead) csv = header.join(sep) + sep + \"\\r\\n\" + csv;\r\n\r\n      // console.log(\"json2csv.obj:\", obj);\r\n      // console.log(\"json2csv.fld:\", fld);\r\n      // console.log(\"json2csv.sep:\", sep);\r\n      // console.log(\"json2csv.quoted:\", quoted);\r\n      // console.log(\"json2csv.whead:\", whead);\r\n      // console.log(\"json2csv.csv:\", csv.substring(0, 100));\r\n\r\n      return csv;\r\n    },\r\n    downloadString(strContent, fileName) {\r\n      if (!fileName)\r\n        fileName =\r\n          Math.random()\r\n            .toString(36)\r\n            .split(\".\")[1] + \".dat\";\r\n      // var encodedUri = encodeURI(strContent);\r\n      var encodedUri = encodeURIComponent(strContent);\r\n      var link = document.createElement(\"a\");\r\n      link.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodedUri);\r\n      link.setAttribute(\"download\", fileName);\r\n      link.style.display = \"none\";\r\n      document.body.appendChild(link); // Required for FF\r\n\r\n      link.click(); // This will download the data file named \"my_data.csv\".\r\n\r\n      this.$root.toastsuccess(\"Arquivo gerado com sucesso !\");\r\n\r\n      document.body.removeChild(link);\r\n    },\r\n    salvar() {\r\n      if (this.templateselected == \"new template\") {\r\n        this.templatename = \"\";\r\n        this.$refs[\"modal-template\"].show();\r\n      } else {\r\n        if (this.templatename !== \"\") {\r\n          this.savetemplate();\r\n        }\r\n      }\r\n    },\r\n    savetemplate() {\r\n      const template = {\r\n        nome: this.templatename,\r\n        ...this.templatemodel,\r\n      };\r\n      const founded = this.templates.find((f) => f.nome == template.nome);\r\n\r\n      if (!founded) {\r\n        this.templates.push(template);\r\n      } else {\r\n        founded.whead = this.whead;\r\n        founded.fld = this.fld;\r\n        founded.sep = this.sep;\r\n        founded.quoted = this.quoted;\r\n        founded.whead = this.whead;\r\n      }\r\n\r\n      localStorage.setItem(\"templatesexport\", JSON.stringify(this.templates));\r\n\r\n      this.templateselected = this.templatename;\r\n\r\n      this.$root.toastsuccess(\"Modelo salvo com sucesso !\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}